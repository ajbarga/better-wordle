name: Build Site to Deploy
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Build
    if: ${{ contains(github.event.head_commit.message, '#D') }}
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO: ajbarga/word-game
      BASE: gh-pages
      BRANCH: deploy${{ github.run_id }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
          
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Configure Git
        run: |
          git config --global user.email actions@no-reply.github.com
          git config --global user.name github-actions

      - name: Build Site
        run: |
          npm i
          npm run build

      - name: Create and Push Build to Branch
        run: |
          mkdir deploy
          cd deploy
          git clone https://${{ secrets.MY_PAT }}@github.com/${{ env.REPO }}.git
          cd word-game
          git checkout --force ${{ env.BASE }}
          git checkout -b ${{ env.BRANCH }}
          rm -rf ./assets
          rm -rf index.html
          mv -f ../../dist/* .
          git add -f .
          git commit -m "Deploy Build to GH Pages"
          git push -f -u origin ${{ env.BRANCH }}
          

      - name: Create PR for Build
        run: |
          gh pr create \
            --repo ${{ env.REPO }} \
            --reviewer ajbarga \
            --base ${{ env.BASE }} \
            --head ${{ env.BRANCH }} \
            --title "${{ github.event.head_commit.message }}" \
            --body "Created automatically by merge to main for ${{ github.actor }}."

  merge:
    needs: deploy
    if: ${{ contains(github.event.head_commit.message, '#M') }}
    runs-on: ubuntu-latest
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pygithub

    - name: Check and Merge PR
      run: |
        from github import Github

        g = Github('${{ secrets.MY_PAT }}')
        r = g.get_repo('ajbarga/word-game')
        prs = [pr.number for pr in r.get_pulls()]
        prs.sort(reverse=True)
        pr = prs[0]
        
        pr.create_review(event="APPROVE")
        r.merge(pr.head.ref, pr.base.ref, f"Merge branch {pr.base.ref} into {pr.head.ref}")
      shell: python
