{"version":3,"sources":["one-row.tsx","one-box.tsx","row-box.tsx","keyboard.tsx","resources/realWords.tsx","WordList.tsx","resources/dictionary.tsx","WordleDriver.tsx","GameDriver.tsx","App.tsx","index.tsx"],"names":["OneRow","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","id","props","gString","Component","OneBox","guess","split","one_row","makeRow","box","type","wordBox","disabled","RowBox","one_box","rowSt","Keyboard","_this","call","window","addEventListener","e","listener","text","document","getElementById","substring","length","getGuess","chc","keyCode","input","_this2","onClick","realText","dict_full","WordList","w","includes","push","getRandomInt","word","toLowerCase","max","Math","floor","random","CH","WordleDriver","_answerC","_answerS","_playing","_charInst","concat","_words","build","c","String","fromCharCode","pick","i","n","charCodeAt","cht","toConsumableArray","loss","is_guessable","ch","str","char","indexOf","toString","GameDriver","wordleDrivers","responses","makeGuess","reset","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","q","num","help","darkMode","rows","wordList","App","gameDriver","analyzeGuess","_ref","asyncToGenerator","_callee","val","_context","_x","_x2","_callee2","j","_context2","setState","tColor","title","forceUpdate","guessVal","timeout","all","querySelectorAll","item","style","textIndent","body","backgroundColor","classList","add","remove","delay","res","setTimeout","rel","href","swapMode","swapHelper","row_box","maxLength","keyboard","g1","ReactDOM","react","src_App"],"mappings":"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","file":"static/js/main.622cf1eb.chunk.js","sourcesContent":["// © 2022 Alex Barga. All rights reserved.\n// Reproduction or transmission in whole or in part, in any form or by any means, electronic,\n// mechanical or otherwise, is prohibited without the prior  written consent of the owner.\nimport React, {Component} from \"react\";\n\ninterface RowProps {\n    gString: any,\n}\n\nclass OneRow extends Component<RowProps> {\n\n    render() {\n        return (\n            <div className={\"container lc\"}>\n                <p className={\"letter\"} id={\"l-\" + this.props.gString[0]}>{this.props.gString[1]}</p>\n                <p className={\"letter\"} id={\"l-\" + this.props.gString[2]}>{this.props.gString[3]}</p>\n                <p className={\"letter\"} id={\"l-\" + this.props.gString[4]}>{this.props.gString[5]}</p>\n                <p className={\"letter\"} id={\"l-\" + this.props.gString[6]}>{this.props.gString[7]}</p>\n                <p className={\"letter\"} id={\"l-\" + this.props.gString[8]}>{this.props.gString[9]}</p>\n            </div>\n        )\n    }\n}\n\nexport default OneRow;","// © 2022 Alex Barga. All rights reserved.\n// Reproduction or transmission in whole or in part, in any form or by any means, electronic,\n// mechanical or otherwise, is prohibited without the prior  written consent of the owner.\nimport React, {Component} from \"react\";\nimport OneRow from './one-row';\n\ninterface OneBoxProps {\n    box: any,\n    wordBox: string,\n}\n\nclass OneBox extends Component<OneBoxProps> {\n\n    makeRow(guess: string) {\n        return guess.split('');\n    }\n\n    render() {\n        return (\n            <div className={\"row\"}>\n                <OneRow gString={this.makeRow(this.props.box[0])}/>\n                <OneRow gString={this.makeRow(this.props.box[1])}/>\n                <OneRow gString={this.makeRow(this.props.box[2])}/>\n                <OneRow gString={this.makeRow(this.props.box[3])}/>\n                <OneRow gString={this.makeRow(this.props.box[4])}/>\n                <OneRow gString={this.makeRow(this.props.box[5])}/>\n                <OneRow gString={this.makeRow(this.props.box[6])}/>\n                <OneRow gString={this.makeRow(this.props.box[7])}/>\n                <OneRow gString={this.makeRow(this.props.box[8])}/>\n                <div className={\"container lc\"}>\n                    <input type={\"button\"} className={\"key\"} id={\"ans-box\"} value={this.props.wordBox} disabled/>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default OneBox;","// © 2022 Alex Barga. All rights reserved.\n// Reproduction or transmission in whole or in part, in any form or by any means, electronic,\n// mechanical or otherwise, is prohibited without the prior  written consent of the owner.\nimport React, {Component} from \"react\";\nimport OneBox from './one-box';\n\ninterface RowBoxProps {\n    rowSt: [[any], [any], [any], [any]],\n    wordBox: [string, string, string, string],\n}\n\nclass RowBox extends Component<RowBoxProps> {\n\n    render() {\n        return (\n            <div>\n                <OneBox box={this.props.rowSt[0]} wordBox={this.props.wordBox[0]}/>\n                <OneBox box={this.props.rowSt[1]} wordBox={this.props.wordBox[1]}/>\n                <OneBox box={this.props.rowSt[2]} wordBox={this.props.wordBox[2]}/>\n                <OneBox box={this.props.rowSt[3]} wordBox={this.props.wordBox[3]}/>\n            </div>\n        );\n    }\n}\n\nexport default RowBox;","// © 2022 Alex Barga. All rights reserved.\n// Reproduction or transmission in whole or in part, in any form or by any means, electronic,\n// mechanical or otherwise, is prohibited without the prior  written consent of the owner.\nimport \"./css/Keyboard.css\";\nimport React, {Component} from \"react\";\n\ninterface KeyProps {\n    getGuess(gs: string): void;\n}\n\nclass Keyboard extends Component<KeyProps> {\n    constructor(props: any) {\n        super(props);\n        window.addEventListener('keydown', e => this.listener(e));\n    }\n\n    input(e: string) {// @ts-ignore\n        let text = document.getElementById('wordBox');\n        if (e === 'Backspace') {// @ts-ignore\n            text.value = text.value.substring(0, text.value.length - 1);\n        } else if (e === 'Enter') {// @ts-ignore\n            this.props.getGuess(text.value);// @ts-ignore\n            text.value = '';// @ts-ignore\n        } else if (text.value.length < 5) {//@ts-ignore\n            text.value = text.value + e;\n        }\n    }\n\n    listener(e: any) {\n        let chc = e.keyCode;\n        if (e.key === 'Backspace' || e.key === 'Enter' || (chc > 64 && chc < 91) || (chc > 96 && chc < 123)) {\n            this.input(e.key);\n        }\n    };\n\n    render() {\n        return (\n            <div className={\"key-box\"}>\n                <div className={\"key-row\"}>\n                    <input className={\"key\"} id=\"keyQ\" type=\"button\" value=\"Q\" onClick={() => {\n                        this.input(\"Q\")\n                    }}/>\n                    <input className={\"key\"} id=\"keyW\" type=\"button\" value=\"W\" onClick={() => {\n                        this.input(\"W\")\n                    }}/>\n                    <input className={\"key\"} id=\"keyE\" type=\"button\" value=\"E\" onClick={() => {\n                        this.input(\"E\")\n                    }}/>\n                    <input className={\"key\"} id=\"keyR\" type=\"button\" value=\"R\" onClick={() => {\n                        this.input(\"R\")\n                    }}/>\n                    <input className={\"key\"} id=\"keyT\" type=\"button\" value=\"T\" onClick={() => {\n                        this.input(\"T\")\n                    }}/>\n                    <input className={\"key\"} id=\"keyY\" type=\"button\" value=\"Y\" onClick={() => {\n                        this.input(\"Y\")\n                    }}/>\n                    <input className={\"key\"} id=\"keyU\" type=\"button\" value=\"U\" onClick={() => {\n                        this.input(\"U\")\n                    }}/>\n                    <input className={\"key\"} id=\"keyI\" type=\"button\" value=\"I\" onClick={() => {\n                        this.input(\"I\")\n                    }}/>\n                    <input className={\"key\"} id=\"keyO\" type=\"button\" value=\"O\" onClick={() => {\n                        this.input(\"O\")\n                    }}/>\n                    <input className={\"key\"} id=\"keyP\" type=\"button\" value=\"P\" onClick={() => {\n                        this.input(\"P\")\n                    }}/>\n                </div>\n                <div className={\"key-row\"}>\n                    <input className={\"key2\"} id=\"keyA\" type=\"button\" value=\"A\" onClick={() => {\n                        this.input(\"A\")\n                    }}/>\n                    <input className={\"key2\"} id=\"keyS\" type=\"button\" value=\"S\" onClick={() => {\n                        this.input(\"S\")\n                    }}/>\n                    <input className={\"key2\"} id=\"keyD\" type=\"button\" value=\"D\" onClick={() => {\n                        this.input(\"D\")\n                    }}/>\n                    <input className={\"key2\"} id=\"keyF\" type=\"button\" value=\"F\" onClick={() => {\n                        this.input(\"F\")\n                    }}/>\n                    <input className={\"key2\"} id=\"keyG\" type=\"button\" value=\"G\" onClick={() => {\n                        this.input(\"G\")\n                    }}/>\n                    <input className={\"key2\"} id=\"keyH\" type=\"button\" value=\"H\" onClick={() => {\n                        this.input(\"H\")\n                    }}/>\n                    <input className={\"key2\"} id=\"keyJ\" type=\"button\" value=\"J\" onClick={() => {\n                        this.input(\"J\")\n                    }}/>\n                    <input className={\"key2\"} id=\"keyK\" type=\"button\" value=\"K\" onClick={() => {\n                        this.input(\"K\")\n                    }}/>\n                    <input className={\"key2\"} id=\"keyL\" type=\"button\" value=\"L\" onClick={() => {\n                        this.input(\"L\")\n                    }}/>\n                </div>\n                <div className={\"key-row\"} id={\"row3\"}>\n                    <input className={\"key3\"} id=\"special\" type=\"button\" value=\"✓\" onClick={() => {\n                        this.input(\"Enter\")\n                    }}/>\n                    <input className={\"key3\"} id=\"keyZ\" type=\"button\" value=\"Z\" onClick={() => {\n                        this.input(\"Z\")\n                    }}/>\n                    <input className={\"key3\"} id=\"keyX\" type=\"button\" value=\"X\" onClick={() => {\n                        this.input(\"X\")\n                    }}/>\n                    <input className={\"key3\"} id=\"keyC\" type=\"button\" value=\"C\" onClick={() => {\n                        this.input(\"C\")\n                    }}/>\n                    <input className={\"key3\"} id=\"keyV\" type=\"button\" value=\"V\" onClick={() => {\n                        this.input(\"V\")\n                    }}/>\n                    <input className={\"key3\"} id=\"keyB\" type=\"button\" value=\"B\" onClick={() => {\n                        this.input(\"B\")\n                    }}/>\n                    <input className={\"key3\"} id=\"keyN\" type=\"button\" value=\"N\" onClick={() => {\n                        this.input(\"N\")\n                    }}/>\n                    <input className={\"key3\"} id=\"keyM\" type=\"button\" value=\"M\" onClick={() => {\n                        this.input(\"M\")\n                    }}/>\n                    <input className={\"key3\"} id=\"special-d\" type={\"button\"} onClick={() => {\n                        this.input(\"Backspace\")\n                    }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Keyboard;","const realText = [\"aback\", \"abase\", \"abate\", \"abbey\", \"abbot\", \"abhor\", \"abide\", \"abled\", \"abode\", \"abort\", \"about\", \"above\", \"abuse\", \"abyss\", \"acorn\", \"acrid\", \"actor\", \"acute\", \"adage\", \"adapt\", \"adept\", \"admin\", \"admit\", \"adobe\", \"adopt\", \"adore\", \"adorn\", \"adult\", \"affix\", \"afire\", \"afoot\", \"afoul\", \"after\", \"again\", \"agape\", \"agate\", \"agent\", \"agile\", \"aging\", \"aglow\", \"agony\", \"agora\", \"agree\", \"ahead\", \"aider\", \"aisle\", \"alarm\", \"album\", \"alert\", \"algae\", \"alibi\", \"alien\", \"align\", \"alike\", \"alive\", \"allay\", \"alley\", \"allot\", \"allow\", \"alloy\", \"aloft\", \"alone\", \"along\", \"aloof\", \"aloud\", \"alpha\", \"altar\", \"alter\", \"amass\", \"amaze\", \"amber\", \"amble\", \"amend\", \"amiss\", \"amity\", \"among\", \"ample\", \"amply\", \"amuse\", \"angel\", \"anger\", \"angle\", \"angry\", \"angst\", \"anime\", \"ankle\", \"annex\", \"annoy\", \"annul\", \"anode\", \"antic\", \"anvil\", \"aorta\", \"apart\", \"aphid\", \"aping\", \"apnea\", \"apple\", \"apply\", \"apron\", \"aptly\", \"arbor\", \"ardor\", \"arena\", \"argue\", \"arise\", \"armor\", \"aroma\", \"arose\", \"array\", \"arrow\", \"arson\", \"artsy\", \"ascot\", \"ashen\", \"aside\", \"askew\", \"assay\", \"asset\", \"atoll\", \"atone\", \"attic\", \"audio\", \"audit\", \"augur\", \"aunty\", \"avail\", \"avert\", \"avian\", \"avoid\", \"await\", \"awake\", \"award\", \"aware\", \"awash\", \"awful\", \"awoke\", \"axial\", \"axiom\", \"axion\", \"azure\", \"bacon\", \"badge\", \"badly\", \"bagel\", \"baggy\", \"baker\", \"baler\", \"balmy\", \"banal\", \"banjo\", \"barge\", \"baron\", \"basal\", \"basic\", \"basil\", \"basin\", \"basis\", \"baste\", \"batch\", \"bathe\", \"baton\", \"batty\", \"bawdy\", \"bayou\", \"beach\", \"beady\", \"beard\", \"beast\", \"beech\", \"beefy\", \"befit\", \"began\", \"begat\", \"beget\", \"begin\", \"begun\", \"being\", \"belch\", \"belie\", \"belle\", \"belly\", \"below\", \"bench\", \"beret\", \"berry\", \"berth\", \"beset\", \"betel\", \"bevel\", \"bezel\", \"bible\", \"bicep\", \"biddy\", \"bigot\", \"bilge\", \"billy\", \"binge\", \"bingo\", \"biome\", \"birch\", \"birth\", \"bison\", \"bitty\", \"black\", \"blade\", \"blame\", \"bland\", \"blank\", \"blare\", \"blast\", \"blaze\", \"bleak\", \"bleat\", \"bleed\", \"bleep\", \"blend\", \"bless\", \"blimp\", \"blind\", \"blink\", \"bliss\", \"blitz\", \"bloat\", \"block\", \"bloke\", \"blond\", \"blood\", \"bloom\", \"blown\", \"bluer\", \"bluff\", \"blunt\", \"blurb\", \"blurt\", \"blush\", \"board\", \"boast\", \"bobby\", \"boney\", \"bongo\", \"bonus\", \"booby\", \"boost\", \"booth\", \"booty\", \"booze\", \"boozy\", \"borax\", \"borne\", \"bosom\", \"bossy\", \"botch\", \"bough\", \"boule\", \"bound\", \"bowel\", \"boxer\", \"brace\", \"braid\", \"brain\", \"brake\", \"brand\", \"brash\", \"brass\", \"brave\", \"bravo\", \"brawl\", \"brawn\", \"bread\", \"break\", \"breed\", \"briar\", \"bribe\", \"brick\", \"bride\", \"brief\", \"brine\", \"bring\", \"brink\", \"briny\", \"brisk\", \"broad\", \"broil\", \"broke\", \"brood\", \"brook\", \"broom\", \"broth\", \"brown\", \"brunt\", \"brush\", \"brute\", \"buddy\", \"budge\", \"buggy\", \"bugle\", \"build\", \"built\", \"bulge\", \"bulky\", \"bully\", \"bunch\", \"bunny\", \"burly\", \"burnt\", \"burst\", \"bused\", \"bushy\", \"butch\", \"butte\", \"buxom\", \"buyer\", \"bylaw\", \"cabal\", \"cabby\", \"cabin\", \"cable\", \"cacao\", \"cache\", \"cacti\", \"caddy\", \"cadet\", \"cagey\", \"cairn\", \"camel\", \"cameo\", \"canal\", \"candy\", \"canny\", \"canoe\", \"canon\", \"caper\", \"caput\", \"carat\", \"cargo\", \"carol\", \"carry\", \"carve\", \"caste\", \"catch\", \"cater\", \"catty\", \"caulk\", \"cause\", \"cavil\", \"cease\", \"cedar\", \"cello\", \"chafe\", \"chaff\", \"chain\", \"chair\", \"chalk\", \"champ\", \"chant\", \"chaos\", \"chard\", \"charm\", \"chart\", \"chase\", \"chasm\", \"cheap\", \"cheat\", \"check\", \"cheek\", \"cheer\", \"chess\", \"chest\", \"chick\", \"chide\", \"chief\", \"child\", \"chili\", \"chill\", \"chime\", \"china\", \"chirp\", \"chock\", \"choir\", \"choke\", \"chord\", \"chore\", \"chose\", \"chuck\", \"chump\", \"chunk\", \"churn\", \"chute\", \"cider\", \"cigar\", \"cinch\", \"circa\", \"civic\", \"civil\", \"clack\", \"claim\", \"clamp\", \"clang\", \"clank\", \"clash\", \"clasp\", \"class\", \"clean\", \"clear\", \"cleat\", \"cleft\", \"clerk\", \"click\", \"cliff\", \"climb\", \"cling\", \"clink\", \"cloak\", \"clock\", \"clone\", \"close\", \"cloth\", \"cloud\", \"clout\", \"clove\", \"clown\", \"cluck\", \"clued\", \"clump\", \"clung\", \"coach\", \"coast\", \"cobra\", \"cocoa\", \"colon\", \"color\", \"comet\", \"comfy\", \"comic\", \"comma\", \"conch\", \"condo\", \"conic\", \"copse\", \"coral\", \"corer\", \"corny\", \"couch\", \"cough\", \"could\", \"count\", \"coupe\", \"court\", \"coven\", \"cover\", \"covet\", \"covey\", \"cower\", \"coyly\", \"crack\", \"craft\", \"cramp\", \"crane\", \"crank\", \"crash\", \"crass\", \"crate\", \"crave\", \"crawl\", \"craze\", \"crazy\", \"creak\", \"cream\", \"credo\", \"creed\", \"creek\", \"creep\", \"creme\", \"crepe\", \"crept\", \"cress\", \"crest\", \"crick\", \"cried\", \"crier\", \"crime\", \"crimp\", \"crisp\", \"croak\", \"crock\", \"crone\", \"crony\", \"crook\", \"cross\", \"croup\", \"crowd\", \"crown\", \"crude\", \"cruel\", \"crumb\", \"crump\", \"crush\", \"crust\", \"crypt\", \"cubic\", \"cumin\", \"curio\", \"curly\", \"curry\", \"curse\", \"curve\", \"curvy\", \"cutie\", \"cyber\", \"cycle\", \"cynic\", \"daddy\", \"daily\", \"dairy\", \"daisy\", \"dally\", \"dance\", \"dandy\", \"datum\", \"daunt\", \"dealt\", \"death\", \"debar\", \"debit\", \"debug\", \"debut\", \"decal\", \"decay\", \"decor\", \"decoy\", \"decry\", \"defer\", \"deign\", \"deity\", \"delay\", \"delta\", \"delve\", \"demon\", \"demur\", \"denim\", \"dense\", \"depot\", \"depth\", \"derby\", \"deter\", \"detox\", \"deuce\", \"devil\", \"diary\", \"dicey\", \"digit\", \"dilly\", \"dimly\", \"diner\", \"dingo\", \"dingy\", \"diode\", \"dirge\", \"dirty\", \"disco\", \"ditch\", \"ditto\", \"ditty\", \"diver\", \"dizzy\", \"dodge\", \"dodgy\", \"dogma\", \"doing\", \"dolly\", \"donor\", \"donut\", \"dopey\", \"doubt\", \"dough\", \"dowdy\", \"dowel\", \"downy\", \"dowry\", \"dozen\", \"draft\", \"drain\", \"drake\", \"drama\", \"drank\", \"drape\", \"drawl\", \"drawn\", \"dread\", \"dream\", \"dress\", \"dried\", \"drier\", \"drift\", \"drill\", \"drink\", \"drive\", \"droit\", \"droll\", \"drone\", \"drool\", \"droop\", \"dross\", \"drove\", \"drown\", \"druid\", \"drunk\", \"dryer\", \"dryly\", \"duchy\", \"dully\", \"dummy\", \"dumpy\", \"dunce\", \"dusky\", \"dusty\", \"dutch\", \"duvet\", \"dwarf\", \"dwell\", \"dwelt\", \"dying\", \"eager\", \"eagle\", \"early\", \"earth\", \"easel\", \"eaten\", \"eater\", \"ebony\", \"eclat\", \"edict\", \"edify\", \"eerie\", \"egret\", \"eight\", \"eject\", \"eking\", \"elate\", \"elbow\", \"elder\", \"elect\", \"elegy\", \"elfin\", \"elide\", \"elite\", \"elope\", \"elude\", \"email\", \"embed\", \"ember\", \"emcee\", \"empty\", \"enact\", \"endow\", \"enema\", \"enemy\", \"enjoy\", \"ennui\", \"ensue\", \"enter\", \"entry\", \"envoy\", \"epoch\", \"epoxy\", \"equal\", \"equip\", \"erase\", \"erect\", \"erode\", \"error\", \"erupt\", \"essay\", \"ester\", \"ether\", \"ethic\", \"ethos\", \"etude\", \"evade\", \"event\", \"every\", \"evict\", \"evoke\", \"exact\", \"exalt\", \"excel\", \"exert\", \"exile\", \"exist\", \"expel\", \"extol\", \"extra\", \"exult\", \"eying\", \"fable\", \"facet\", \"faint\", \"fairy\", \"faith\", \"false\", \"fancy\", \"fanny\", \"farce\", \"fatal\", \"fatty\", \"fault\", \"fauna\", \"favor\", \"feast\", \"fecal\", \"feign\", \"fella\", \"felon\", \"femme\", \"femur\", \"fence\", \"feral\", \"ferry\", \"fetal\", \"fetch\", \"fetid\", \"fetus\", \"fever\", \"fewer\", \"fiber\", \"fibre\", \"ficus\", \"field\", \"fiend\", \"fiery\", \"fifth\", \"fifty\", \"fight\", \"filer\", \"filet\", \"filly\", \"filmy\", \"filth\", \"final\", \"finch\", \"finer\", \"first\", \"fishy\", \"fixer\", \"fizzy\", \"fjord\", \"flack\", \"flail\", \"flair\", \"flake\", \"flaky\", \"flame\", \"flank\", \"flare\", \"flash\", \"flask\", \"fleck\", \"fleet\", \"flesh\", \"flick\", \"flier\", \"fling\", \"flint\", \"flirt\", \"float\", \"flock\", \"flood\", \"floor\", \"flora\", \"floss\", \"flour\", \"flout\", \"flown\", \"fluff\", \"fluid\", \"fluke\", \"flume\", \"flung\", \"flunk\", \"flush\", \"flute\", \"flyer\", \"foamy\", \"focal\", \"focus\", \"foggy\", \"foist\", \"folio\", \"folly\", \"foray\", \"force\", \"forge\", \"forgo\", \"forte\", \"forth\", \"forty\", \"forum\", \"found\", \"foyer\", \"frail\", \"frame\", \"frank\", \"fraud\", \"freak\", \"freed\", \"freer\", \"fresh\", \"friar\", \"fried\", \"frill\", \"frisk\", \"fritz\", \"frock\", \"frond\", \"front\", \"frost\", \"froth\", \"frown\", \"froze\", \"fruit\", \"fudge\", \"fugue\", \"fully\", \"fungi\", \"funky\", \"funny\", \"furor\", \"furry\", \"fussy\", \"fuzzy\", \"gaffe\", \"gaily\", \"gamer\", \"gamma\", \"gamut\", \"gassy\", \"gaudy\", \"gauge\", \"gaunt\", \"gauze\", \"gavel\", \"gawky\", \"gayer\", \"gayly\", \"gazer\", \"gecko\", \"geeky\", \"geese\", \"genie\", \"genre\", \"ghost\", \"ghoul\", \"giant\", \"giddy\", \"gipsy\", \"girly\", \"girth\", \"given\", \"giver\", \"glade\", \"gland\", \"glare\", \"glass\", \"glaze\", \"gleam\", \"glean\", \"glide\", \"glint\", \"gloat\", \"globe\", \"gloom\", \"glory\", \"gloss\", \"glove\", \"glyph\", \"gnash\", \"gnome\", \"godly\", \"going\", \"golem\", \"golly\", \"gonad\", \"goner\", \"goody\", \"gooey\", \"goofy\", \"goose\", \"gorge\", \"gouge\", \"gourd\", \"grace\", \"grade\", \"graft\", \"grail\", \"grain\", \"grand\", \"grant\", \"grape\", \"graph\", \"grasp\", \"grass\", \"grate\", \"grave\", \"gravy\", \"graze\", \"great\", \"greed\", \"green\", \"greet\", \"grief\", \"grill\", \"grime\", \"grimy\", \"grind\", \"gripe\", \"groan\", \"groin\", \"groom\", \"grope\", \"gross\", \"group\", \"grout\", \"grove\", \"growl\", \"grown\", \"gruel\", \"gruff\", \"grunt\", \"guard\", \"guava\", \"guess\", \"guest\", \"guide\", \"guild\", \"guile\", \"guilt\", \"guise\", \"gulch\", \"gully\", \"gumbo\", \"gummy\", \"guppy\", \"gusto\", \"gusty\", \"gypsy\", \"habit\", \"hairy\", \"halve\", \"handy\", \"happy\", \"hardy\", \"harem\", \"harpy\", \"harry\", \"harsh\", \"haste\", \"hasty\", \"hatch\", \"hater\", \"haunt\", \"haute\", \"haven\", \"havoc\", \"hazel\", \"heady\", \"heard\", \"heart\", \"heath\", \"heave\", \"heavy\", \"hedge\", \"hefty\", \"heist\", \"helix\", \"hello\", \"hence\", \"heron\", \"hilly\", \"hinge\", \"hippo\", \"hippy\", \"hitch\", \"hoard\", \"hobby\", \"hoist\", \"holly\", \"homer\", \"honey\", \"honor\", \"horde\", \"horny\", \"horse\", \"hotel\", \"hotly\", \"hound\", \"house\", \"hovel\", \"hover\", \"howdy\", \"human\", \"humid\", \"humor\", \"humph\", \"humus\", \"hunch\", \"hunky\", \"hurry\", \"husky\", \"hussy\", \"hutch\", \"hydro\", \"hyena\", \"hymen\", \"hyper\", \"icily\", \"icing\", \"ideal\", \"idiom\", \"idiot\", \"idler\", \"idyll\", \"igloo\", \"iliac\", \"image\", \"imbue\", \"impel\", \"imply\", \"inane\", \"inbox\", \"incur\", \"index\", \"inept\", \"inert\", \"infer\", \"ingot\", \"inlay\", \"inlet\", \"inner\", \"input\", \"inter\", \"intro\", \"ionic\", \"irate\", \"irony\", \"islet\", \"issue\", \"itchy\", \"ivory\", \"jaunt\", \"jazzy\", \"jelly\", \"jerky\", \"jetty\", \"jewel\", \"jiffy\", \"joint\", \"joist\", \"joker\", \"jolly\", \"joust\", \"judge\", \"juice\", \"juicy\", \"jumbo\", \"jumpy\", \"junta\", \"junto\", \"juror\", \"kappa\", \"karma\", \"kayak\", \"kebab\", \"khaki\", \"kinky\", \"kiosk\", \"kitty\", \"knack\", \"knave\", \"knead\", \"kneed\", \"kneel\", \"knelt\", \"knife\", \"knock\", \"knoll\", \"known\", \"koala\", \"krill\", \"label\", \"labor\", \"laden\", \"ladle\", \"lager\", \"lance\", \"lanky\", \"lapel\", \"lapse\", \"large\", \"larva\", \"lasso\", \"latch\", \"later\", \"lathe\", \"latte\", \"laugh\", \"layer\", \"leach\", \"leafy\", \"leaky\", \"leant\", \"leapt\", \"learn\", \"lease\", \"leash\", \"least\", \"leave\", \"ledge\", \"leech\", \"leery\", \"lefty\", \"legal\", \"leggy\", \"lemon\", \"lemur\", \"leper\", \"level\", \"lever\", \"libel\", \"liege\", \"light\", \"liken\", \"lilac\", \"limbo\", \"limit\", \"linen\", \"liner\", \"lingo\", \"lipid\", \"lithe\", \"liver\", \"livid\", \"llama\", \"loamy\", \"loath\", \"lobby\", \"local\", \"locus\", \"lodge\", \"lofty\", \"logic\", \"login\", \"loopy\", \"loose\", \"lorry\", \"loser\", \"louse\", \"lousy\", \"lover\", \"lower\", \"lowly\", \"loyal\", \"lucid\", \"lucky\", \"lumen\", \"lumpy\", \"lunar\", \"lunch\", \"lunge\", \"lupus\", \"lurch\", \"lurid\", \"lusty\", \"lying\", \"lymph\", \"lynch\", \"lyric\", \"macaw\", \"macho\", \"macro\", \"madam\", \"madly\", \"mafia\", \"magic\", \"magma\", \"maize\", \"major\", \"maker\", \"mambo\", \"mamma\", \"mammy\", \"manga\", \"mange\", \"mango\", \"mangy\", \"mania\", \"manic\", \"manly\", \"manor\", \"maple\", \"march\", \"marry\", \"marsh\", \"mason\", \"masse\", \"match\", \"matey\", \"mauve\", \"maxim\", \"maybe\", \"mayor\", \"mealy\", \"meant\", \"meaty\", \"mecca\", \"medal\", \"media\", \"medic\", \"melee\", \"melon\", \"mercy\", \"merge\", \"merit\", \"merry\", \"metal\", \"meter\", \"metro\", \"micro\", \"midge\", \"midst\", \"might\", \"milky\", \"mimic\", \"mince\", \"miner\", \"minim\", \"minor\", \"minty\", \"minus\", \"mirth\", \"miser\", \"missy\", \"mocha\", \"modal\", \"model\", \"modem\", \"mogul\", \"moist\", \"molar\", \"moldy\", \"money\", \"month\", \"moody\", \"moose\", \"moral\", \"moron\", \"morph\", \"mossy\", \"motel\", \"motif\", \"motor\", \"motto\", \"moult\", \"mound\", \"mount\", \"mourn\", \"mouse\", \"mouth\", \"mover\", \"movie\", \"mower\", \"mucky\", \"mucus\", \"muddy\", \"mulch\", \"mummy\", \"munch\", \"mural\", \"murky\", \"mushy\", \"music\", \"musky\", \"musty\", \"myrrh\", \"nadir\", \"naive\", \"nanny\", \"nasal\", \"nasty\", \"natal\", \"naval\", \"navel\", \"needy\", \"neigh\", \"nerdy\", \"nerve\", \"never\", \"newer\", \"newly\", \"nicer\", \"niche\", \"niece\", \"night\", \"ninja\", \"ninny\", \"ninth\", \"noble\", \"nobly\", \"noise\", \"noisy\", \"nomad\", \"noose\", \"north\", \"nosey\", \"notch\", \"novel\", \"nudge\", \"nurse\", \"nutty\", \"nylon\", \"nymph\", \"oaken\", \"obese\", \"occur\", \"ocean\", \"octal\", \"octet\", \"odder\", \"oddly\", \"offal\", \"offer\", \"often\", \"olden\", \"older\", \"olive\", \"ombre\", \"omega\", \"onion\", \"onset\", \"opera\", \"opine\", \"opium\", \"optic\", \"orbit\", \"order\", \"organ\", \"other\", \"otter\", \"ought\", \"ounce\", \"outdo\", \"outer\", \"outgo\", \"ovary\", \"ovate\", \"overt\", \"ovine\", \"ovoid\", \"owing\", \"owner\", \"oxide\", \"ozone\", \"paddy\", \"pagan\", \"paint\", \"paler\", \"palsy\", \"panel\", \"panic\", \"pansy\", \"papal\", \"paper\", \"parer\", \"parka\", \"parry\", \"parse\", \"party\", \"pasta\", \"paste\", \"pasty\", \"patch\", \"patio\", \"patsy\", \"patty\", \"pause\", \"payee\", \"payer\", \"peace\", \"peach\", \"pearl\", \"pecan\", \"pedal\", \"penal\", \"pence\", \"penne\", \"penny\", \"perch\", \"peril\", \"perky\", \"pesky\", \"pesto\", \"petal\", \"petty\", \"phase\", \"phone\", \"phony\", \"photo\", \"piano\", \"picky\", \"piece\", \"piety\", \"piggy\", \"pilot\", \"pinch\", \"piney\", \"pinky\", \"pinto\", \"piper\", \"pique\", \"pitch\", \"pithy\", \"pivot\", \"pixel\", \"pixie\", \"pizza\", \"place\", \"plaid\", \"plain\", \"plait\", \"plane\", \"plank\", \"plant\", \"plate\", \"plaza\", \"plead\", \"pleat\", \"plied\", \"plier\", \"pluck\", \"plumb\", \"plume\", \"plump\", \"plunk\", \"plush\", \"poesy\", \"point\", \"poise\", \"poker\", \"polar\", \"polka\", \"polyp\", \"pooch\", \"poppy\", \"porch\", \"poser\", \"posit\", \"posse\", \"pouch\", \"pound\", \"pouty\", \"power\", \"prank\", \"prawn\", \"preen\", \"press\", \"price\", \"prick\", \"pride\", \"pried\", \"prime\", \"primo\", \"print\", \"prior\", \"prism\", \"privy\", \"prize\", \"probe\", \"prone\", \"prong\", \"proof\", \"prose\", \"proud\", \"prove\", \"prowl\", \"proxy\", \"prude\", \"prune\", \"psalm\", \"pubic\", \"pudgy\", \"puffy\", \"pulpy\", \"pulse\", \"punch\", \"pupal\", \"pupil\", \"puppy\", \"puree\", \"purer\", \"purge\", \"purse\", \"pushy\", \"putty\", \"pygmy\", \"quack\", \"quail\", \"quake\", \"qualm\", \"quark\", \"quart\", \"quash\", \"quasi\", \"queen\", \"queer\", \"quell\", \"query\", \"quest\", \"queue\", \"quick\", \"quiet\", \"quill\", \"quilt\", \"quirk\", \"quite\", \"quota\", \"quote\", \"quoth\", \"rabbi\", \"rabid\", \"racer\", \"radar\", \"radii\", \"radio\", \"rainy\", \"raise\", \"rajah\", \"rally\", \"ralph\", \"ramen\", \"ranch\", \"randy\", \"range\", \"rapid\", \"rarer\", \"raspy\", \"ratio\", \"ratty\", \"raven\", \"rayon\", \"razor\", \"reach\", \"react\", \"ready\", \"realm\", \"rearm\", \"rebar\", \"rebel\", \"rebus\", \"rebut\", \"recap\", \"recur\", \"recut\", \"reedy\", \"refer\", \"refit\", \"regal\", \"rehab\", \"reign\", \"relax\", \"relay\", \"relic\", \"remit\", \"renal\", \"renew\", \"repay\", \"repel\", \"reply\", \"rerun\", \"reset\", \"resin\", \"retch\", \"retro\", \"retry\", \"reuse\", \"revel\", \"revue\", \"rhino\", \"rhyme\", \"rider\", \"ridge\", \"rifle\", \"right\", \"rigid\", \"rigor\", \"rinse\", \"ripen\", \"riper\", \"risen\", \"riser\", \"risky\", \"rival\", \"river\", \"rivet\", \"roach\", \"roast\", \"robin\", \"robot\", \"rocky\", \"rodeo\", \"roger\", \"rogue\", \"roomy\", \"roost\", \"rotor\", \"rouge\", \"rough\", \"round\", \"rouse\", \"route\", \"rover\", \"rowdy\", \"rower\", \"royal\", \"ruddy\", \"ruder\", \"rugby\", \"ruler\", \"rumba\", \"rumor\", \"rupee\", \"rural\", \"rusty\", \"sadly\", \"safer\", \"saint\", \"salad\", \"sally\", \"salon\", \"salsa\", \"salty\", \"salve\", \"salvo\", \"sandy\", \"saner\", \"sappy\", \"sassy\", \"satin\", \"satyr\", \"sauce\", \"saucy\", \"sauna\", \"saute\", \"savor\", \"savoy\", \"savvy\", \"scald\", \"scale\", \"scalp\", \"scaly\", \"scamp\", \"scant\", \"scare\", \"scarf\", \"scary\", \"scene\", \"scent\", \"scion\", \"scoff\", \"scold\", \"scone\", \"scoop\", \"scope\", \"score\", \"scorn\", \"scour\", \"scout\", \"scowl\", \"scram\", \"scrap\", \"scree\", \"screw\", \"scrub\", \"scrum\", \"scuba\", \"sedan\", \"seedy\", \"segue\", \"seize\", \"semen\", \"sense\", \"sepia\", \"serif\", \"serum\", \"serve\", \"setup\", \"seven\", \"sever\", \"sewer\", \"shack\", \"shade\", \"shady\", \"shaft\", \"shake\", \"shaky\", \"shale\", \"shall\", \"shalt\", \"shame\", \"shank\", \"shape\", \"shard\", \"share\", \"shark\", \"sharp\", \"shave\", \"shawl\", \"shear\", \"sheen\", \"sheep\", \"sheer\", \"sheet\", \"sheik\", \"shelf\", \"shell\", \"shied\", \"shift\", \"shine\", \"shiny\", \"shire\", \"shirk\", \"shirt\", \"shoal\", \"shock\", \"shone\", \"shook\", \"shoot\", \"shore\", \"shorn\", \"short\", \"shout\", \"shove\", \"shown\", \"showy\", \"shrew\", \"shrub\", \"shrug\", \"shuck\", \"shunt\", \"shush\", \"shyly\", \"siege\", \"sieve\", \"sight\", \"sigma\", \"silky\", \"silly\", \"since\", \"sinew\", \"singe\", \"siren\", \"sissy\", \"sixth\", \"sixty\", \"skate\", \"skier\", \"skiff\", \"skill\", \"skimp\", \"skirt\", \"skulk\", \"skull\", \"skunk\", \"slack\", \"slain\", \"slang\", \"slant\", \"slash\", \"slate\", \"slave\", \"sleek\", \"sleep\", \"sleet\", \"slept\", \"slice\", \"slick\", \"slide\", \"slime\", \"slimy\", \"sling\", \"slink\", \"sloop\", \"slope\", \"slosh\", \"sloth\", \"slump\", \"slung\", \"slunk\", \"slurp\", \"slush\", \"slyly\", \"smack\", \"small\", \"smart\", \"smash\", \"smear\", \"smell\", \"smelt\", \"smile\", \"smirk\", \"smite\", \"smith\", \"smock\", \"smoke\", \"smoky\", \"smote\", \"snack\", \"snail\", \"snake\", \"snaky\", \"snare\", \"snarl\", \"sneak\", \"sneer\", \"snide\", \"sniff\", \"snipe\", \"snoop\", \"snore\", \"snort\", \"snout\", \"snowy\", \"snuck\", \"snuff\", \"soapy\", \"sober\", \"soggy\", \"solar\", \"solid\", \"solve\", \"sonar\", \"sonic\", \"sooth\", \"sooty\", \"sorry\", \"sound\", \"south\", \"sower\", \"space\", \"spade\", \"spank\", \"spare\", \"spark\", \"spasm\", \"spawn\", \"speak\", \"spear\", \"speck\", \"speed\", \"spell\", \"spelt\", \"spend\", \"spent\", \"sperm\", \"spice\", \"spicy\", \"spied\", \"spiel\", \"spike\", \"spiky\", \"spill\", \"spilt\", \"spine\", \"spiny\", \"spire\", \"spite\", \"splat\", \"split\", \"spoil\", \"spoke\", \"spoof\", \"spook\", \"spool\", \"spoon\", \"spore\", \"sport\", \"spout\", \"spray\", \"spree\", \"sprig\", \"spunk\", \"spurn\", \"spurt\", \"squad\", \"squat\", \"squib\", \"stack\", \"staff\", \"stage\", \"staid\", \"stain\", \"stair\", \"stake\", \"stale\", \"stalk\", \"stall\", \"stamp\", \"stand\", \"stank\", \"stare\", \"stark\", \"start\", \"stash\", \"state\", \"stave\", \"stead\", \"steak\", \"steal\", \"steam\", \"steed\", \"steel\", \"steep\", \"steer\", \"stein\", \"stern\", \"stick\", \"stiff\", \"still\", \"stilt\", \"sting\", \"stink\", \"stint\", \"stock\", \"stoic\", \"stoke\", \"stole\", \"stomp\", \"stone\", \"stony\", \"stood\", \"stool\", \"stoop\", \"store\", \"stork\", \"storm\", \"story\", \"stout\", \"stove\", \"strap\", \"straw\", \"stray\", \"strip\", \"strut\", \"stuck\", \"study\", \"stuff\", \"stump\", \"stung\", \"stunk\", \"stunt\", \"style\", \"suave\", \"sugar\", \"suing\", \"suite\", \"sulky\", \"sully\", \"sumac\", \"sunny\", \"super\", \"surer\", \"surge\", \"surly\", \"sushi\", \"swami\", \"swamp\", \"swarm\", \"swash\", \"swath\", \"swear\", \"sweat\", \"sweep\", \"sweet\", \"swell\", \"swept\", \"swift\", \"swill\", \"swine\", \"swing\", \"swirl\", \"swish\", \"swoon\", \"swoop\", \"sword\", \"swore\", \"sworn\", \"swung\", \"synod\", \"syrup\", \"tabby\", \"table\", \"taboo\", \"tacit\", \"tacky\", \"taffy\", \"taint\", \"taken\", \"taker\", \"tally\", \"talon\", \"tamer\", \"tango\", \"tangy\", \"taper\", \"tapir\", \"tardy\", \"tarot\", \"taste\", \"tasty\", \"tatty\", \"taunt\", \"tawny\", \"teach\", \"teary\", \"tease\", \"teddy\", \"teeth\", \"tempo\", \"tenet\", \"tenor\", \"tense\", \"tenth\", \"tepee\", \"tepid\", \"terra\", \"terse\", \"testy\", \"thank\", \"theft\", \"their\", \"theme\", \"there\", \"these\", \"theta\", \"thick\", \"thief\", \"thigh\", \"thing\", \"think\", \"third\", \"thong\", \"thorn\", \"those\", \"three\", \"threw\", \"throb\", \"throw\", \"thrum\", \"thumb\", \"thump\", \"thyme\", \"tiara\", \"tibia\", \"tidal\", \"tiger\", \"tight\", \"tilde\", \"timer\", \"timid\", \"tipsy\", \"titan\", \"tithe\", \"title\", \"toast\", \"today\", \"toddy\", \"token\", \"tonal\", \"tonga\", \"tonic\", \"tooth\", \"topaz\", \"topic\", \"torch\", \"torso\", \"torus\", \"total\", \"totem\", \"touch\", \"tough\", \"towel\", \"tower\", \"toxic\", \"toxin\", \"trace\", \"track\", \"tract\", \"trade\", \"trail\", \"train\", \"trait\", \"tramp\", \"trash\", \"trawl\", \"tread\", \"treat\", \"trend\", \"triad\", \"trial\", \"tribe\", \"trice\", \"trick\", \"tried\", \"tripe\", \"trite\", \"troll\", \"troop\", \"trope\", \"trout\", \"trove\", \"truce\", \"truck\", \"truer\", \"truly\", \"trump\", \"trunk\", \"truss\", \"trust\", \"truth\", \"tryst\", \"tubal\", \"tuber\", \"tulip\", \"tulle\", \"tumor\", \"tunic\", \"turbo\", \"tutor\", \"twang\", \"tweak\", \"tweed\", \"tweet\", \"twice\", \"twine\", \"twirl\", \"twist\", \"twixt\", \"tying\", \"udder\", \"ulcer\", \"ultra\", \"umbra\", \"uncle\", \"uncut\", \"under\", \"undid\", \"undue\", \"unfed\", \"unfit\", \"unify\", \"union\", \"unite\", \"unity\", \"unlit\", \"unmet\", \"unset\", \"untie\", \"until\", \"unwed\", \"unzip\", \"upper\", \"upset\", \"urban\", \"urine\", \"usage\", \"usher\", \"using\", \"usual\", \"usurp\", \"utile\", \"utter\", \"vague\", \"valet\", \"valid\", \"valor\", \"value\", \"valve\", \"vapid\", \"vapor\", \"vault\", \"vaunt\", \"vegan\", \"venom\", \"venue\", \"verge\", \"verse\", \"verso\", \"verve\", \"vicar\", \"video\", \"vigil\", \"vigor\", \"villa\", \"vinyl\", \"viola\", \"viper\", \"viral\", \"virus\", \"visit\", \"visor\", \"vista\", \"vital\", \"vivid\", \"vixen\", \"vocal\", \"vodka\", \"vogue\", \"voice\", \"voila\", \"vomit\", \"voter\", \"vouch\", \"vowel\", \"vying\", \"wacky\", \"wafer\", \"wager\", \"wagon\", \"waist\", \"waive\", \"waltz\", \"warty\", \"waste\", \"watch\", \"water\", \"waver\", \"waxen\", \"weary\", \"weave\", \"wedge\", \"weedy\", \"weigh\", \"weird\", \"welch\", \"welsh\", \"wench\", \"whack\", \"whale\", \"wharf\", \"wheat\", \"wheel\", \"whelp\", \"where\", \"which\", \"whiff\", \"while\", \"whine\", \"whiny\", \"whirl\", \"whisk\", \"white\", \"whole\", \"whoop\", \"whose\", \"widen\", \"wider\", \"widow\", \"width\", \"wield\", \"wight\", \"willy\", \"wimpy\", \"wince\", \"winch\", \"windy\", \"wiser\", \"wispy\", \"witch\", \"witty\", \"woken\", \"woman\", \"women\", \"woody\", \"wooer\", \"wooly\", \"woozy\", \"wordy\", \"world\", \"worry\", \"worse\", \"worst\", \"worth\", \"would\", \"wound\", \"woven\", \"wrack\", \"wrath\", \"wreak\", \"wreck\", \"wrest\", \"wring\", \"wrist\", \"write\", \"wrong\", \"wrote\", \"wrung\", \"wryly\", \"yacht\", \"yearn\", \"yeast\", \"yield\", \"young\", \"youth\", \"zebra\", \"zesty\", \"zonal\"]\n\nexport default realText;","// © 2022 Alex Barga. All rights reserved.\n// Reproduction or transmission in whole or in part, in any form or by any means, electronic,\n// mechanical or otherwise, is prohibited without the prior  written consent of the owner.\nimport text from \"./resources/dictionary\";\nimport realText from \"./resources/realWords\";\n\nlet dict_full: string[] = text;\n\nclass WordList\n{\n    constructor()\n    {\n        for (let w in realText)\n        {\n            if (!dict_full.includes(w))\n            {\n                dict_full.push(w);\n            }\n        }\n    }\n\n    pick()\n    {\n        return realText[this.getRandomInt(realText.length)];\n    }\n\n    is_guessable(word: string)\n    {\n        return dict_full.includes(word.toLowerCase());\n    }\n\n    getRandomInt(max: number)\n    {\n        return Math.floor(Math.random() * max);\n    }\n}\n\nexport default WordList;","const text = [\"which\", \"there\", \"their\", \"about\", \"would\", \"these\", \"other\", \"words\", \"could\", \"write\", \"first\", \"water\", \"after\", \"where\", \"right\", \"think\", \"three\", \"years\", \"place\", \"sound\", \"great\", \"again\", \"still\", \"every\", \"small\", \"found\", \"those\", \"never\", \"under\", \"might\", \"while\", \"house\", \"world\", \"below\", \"asked\", \"going\", \"large\", \"until\", \"along\", \"shall\", \"being\", \"often\", \"earth\", \"began\", \"since\", \"study\", \"night\", \"light\", \"above\", \"paper\", \"parts\", \"young\", \"story\", \"point\", \"times\", \"heard\", \"whole\", \"white\", \"given\", \"means\", \"music\", \"miles\", \"thing\", \"today\", \"later\", \"using\", \"money\", \"lines\", \"order\", \"group\", \"among\", \"learn\", \"known\", \"space\", \"table\", \"early\", \"trees\", \"short\", \"hands\", \"state\", \"black\", \"shown\", \"stood\", \"front\", \"voice\", \"kinds\", \"makes\", \"comes\", \"close\", \"power\", \"lived\", \"vowel\", \"taken\", \"built\", \"heart\", \"ready\", \"quite\", \"class\", \"bring\", \"round\", \"horse\", \"shows\", \"piece\", \"green\", \"stand\", \"birds\", \"start\", \"river\", \"tried\", \"least\", \"field\", \"whose\", \"girls\", \"leave\", \"added\", \"color\", \"third\", \"hours\", \"moved\", \"plant\", \"doing\", \"names\", \"forms\", \"heavy\", \"ideas\", \"cried\", \"check\", \"floor\", \"begin\", \"woman\", \"alone\", \"plane\", \"spell\", \"watch\", \"carry\", \"wrote\", \"clear\", \"named\", \"books\", \"child\", \"glass\", \"human\", \"takes\", \"party\", \"build\", \"seems\", \"blood\", \"sides\", \"seven\", \"mouth\", \"solve\", \"north\", \"value\", \"death\", \"maybe\", \"happy\", \"tells\", \"gives\", \"looks\", \"shape\", \"lives\", \"steps\", \"areas\", \"sense\", \"speak\", \"force\", \"ocean\", \"speed\", \"women\", \"metal\", \"south\", \"grass\", \"scale\", \"cells\", \"lower\", \"sleep\", \"wrong\", \"pages\", \"ships\", \"needs\", \"rocks\", \"eight\", \"major\", \"level\", \"total\", \"ahead\", \"reach\", \"stars\", \"store\", \"sight\", \"terms\", \"catch\", \"works\", \"board\", \"cover\", \"songs\", \"equal\", \"stone\", \"waves\", \"guess\", \"dance\", \"spoke\", \"break\", \"cause\", \"radio\", \"weeks\", \"lands\", \"basic\", \"liked\", \"trade\", \"fresh\", \"final\", \"fight\", \"meant\", \"drive\", \"spent\", \"local\", \"waxes\", \"knows\", \"train\", \"bread\", \"homes\", \"teeth\", \"coast\", \"thick\", \"brown\", \"clean\", \"quiet\", \"sugar\", \"facts\", \"steel\", \"forth\", \"rules\", \"notes\", \"units\", \"peace\", \"month\", \"verbs\", \"seeds\", \"helps\", \"sharp\", \"visit\", \"woods\", \"chief\", \"walls\", \"cross\", \"wings\", \"grown\", \"cases\", \"foods\", \"crops\", \"fruit\", \"stick\", \"wants\", \"stage\", \"sheep\", \"nouns\", \"plain\", \"drink\", \"bones\", \"apart\", \"turns\", \"moves\", \"touch\", \"angle\", \"based\", \"range\", \"marks\", \"tired\", \"older\", \"farms\", \"spend\", \"shoes\", \"goods\", \"chair\", \"twice\", \"cents\", \"empty\", \"alike\", \"style\", \"broke\", \"pairs\", \"count\", \"enjoy\", \"score\", \"shore\", \"roots\", \"paint\", \"heads\", \"shook\", \"serve\", \"angry\", \"crowd\", \"wheel\", \"quick\", \"dress\", \"share\", \"alive\", \"noise\", \"solid\", \"cloth\", \"signs\", \"hills\", \"types\", \"drawn\", \"worth\", \"truck\", \"piano\", \"upper\", \"loved\", \"usual\", \"faces\", \"drove\", \"cabin\", \"boats\", \"towns\", \"proud\", \"court\", \"model\", \"prime\", \"fifty\", \"plans\", \"yards\", \"prove\", \"tools\", \"price\", \"sheet\", \"smell\", \"boxes\", \"raise\", \"match\", \"truth\", \"roads\", \"threw\", \"enemy\", \"lunch\", \"chart\", \"scene\", \"graph\", \"doubt\", \"guide\", \"winds\", \"block\", \"grain\", \"smoke\", \"mixed\", \"games\", \"wagon\", \"sweet\", \"topic\", \"extra\", \"plate\", \"title\", \"knife\", \"fence\", \"falls\", \"cloud\", \"wheat\", \"plays\", \"enter\", \"broad\", \"steam\", \"atoms\", \"press\", \"lying\", \"basis\", \"clock\", \"taste\", \"grows\", \"thank\", \"storm\", \"agree\", \"brain\", \"track\", \"smile\", \"funny\", \"beach\", \"stock\", \"hurry\", \"saved\", \"sorry\", \"giant\", \"trail\", \"offer\", \"ought\", \"rough\", \"daily\", \"avoid\", \"keeps\", \"throw\", \"allow\", \"cream\", \"laugh\", \"edges\", \"teach\", \"frame\", \"bells\", \"dream\", \"magic\", \"occur\", \"ended\", \"chord\", \"false\", \"skill\", \"holes\", \"dozen\", \"brave\", \"apple\", \"climb\", \"outer\", \"pitch\", \"ruler\", \"holds\", \"fixed\", \"costs\", \"calls\", \"blank\", \"staff\", \"labor\", \"eaten\", \"youth\", \"tones\", \"honor\", \"globe\", \"gases\", \"doors\", \"poles\", \"loose\", \"apply\", \"tears\", \"exact\", \"brush\", \"chest\", \"layer\", \"whale\", \"minor\", \"faith\", \"tests\", \"judge\", \"items\", \"worry\", \"waste\", \"hoped\", \"strip\", \"begun\", \"aside\", \"lakes\", \"bound\", \"depth\", \"candy\", \"event\", \"worse\", \"aware\", \"shell\", \"rooms\", \"ranch\", \"image\", \"snake\", \"aloud\", \"dried\", \"likes\", \"motor\", \"pound\", \"knees\", \"refer\", \"fully\", \"chain\", \"shirt\", \"flour\", \"drops\", \"spite\", \"orbit\", \"banks\", \"shoot\", \"curve\", \"tribe\", \"tight\", \"blind\", \"slept\", \"shade\", \"claim\", \"flies\", \"theme\", \"queen\", \"fifth\", \"union\", \"hence\", \"straw\", \"entry\", \"issue\", \"birth\", \"feels\", \"anger\", \"brief\", \"rhyme\", \"glory\", \"guard\", \"flows\", \"flesh\", \"owned\", \"trick\", \"yours\", \"sizes\", \"noted\", \"width\", \"burst\", \"route\", \"lungs\", \"uncle\", \"bears\", \"royal\", \"kings\", \"forty\", \"trial\", \"cards\", \"brass\", \"opera\", \"chose\", \"owner\", \"vapor\", \"beats\", \"mouse\", \"tough\", \"wires\", \"meter\", \"tower\", \"finds\", \"inner\", \"stuck\", \"arrow\", \"poems\", \"label\", \"swing\", \"solar\", \"truly\", \"tense\", \"beans\", \"split\", \"rises\", \"weigh\", \"hotel\", \"stems\", \"pride\", \"swung\", \"grade\", \"digit\", \"badly\", \"boots\", \"pilot\", \"sales\", \"swept\", \"lucky\", \"prize\", \"stove\", \"tubes\", \"acres\", \"wound\", \"steep\", \"slide\", \"trunk\", \"error\", \"porch\", \"slave\", \"exist\", \"faced\", \"mines\", \"marry\", \"juice\", \"raced\", \"waved\", \"goose\", \"trust\", \"fewer\", \"favor\", \"mills\", \"views\", \"joint\", \"eager\", \"spots\", \"blend\", \"rings\", \"adult\", \"index\", \"nails\", \"horns\", \"balls\", \"flame\", \"rates\", \"drill\", \"trace\", \"skins\", \"waxed\", \"seats\", \"stuff\", \"ratio\", \"minds\", \"dirty\", \"silly\", \"coins\", \"hello\", \"trips\", \"leads\", \"rifle\", \"hopes\", \"bases\", \"shine\", \"bench\", \"moral\", \"fires\", \"meals\", \"shake\", \"shops\", \"cycle\", \"movie\", \"slope\", \"canoe\", \"teams\", \"folks\", \"fired\", \"bands\", \"thumb\", \"shout\", \"canal\", \"habit\", \"reply\", \"ruled\", \"fever\", \"crust\", \"shelf\", \"walks\", \"midst\", \"crack\", \"print\", \"tales\", \"coach\", \"stiff\", \"flood\", \"verse\", \"awake\", \"rocky\", \"march\", \"fault\", \"swift\", \"faint\", \"civil\", \"ghost\", \"feast\", \"blade\", \"limit\", \"germs\", \"reads\", \"ducks\", \"dairy\", \"worst\", \"gifts\", \"lists\", \"stops\", \"rapid\", \"brick\", \"claws\", \"beads\", \"beast\", \"skirt\", \"cakes\", \"lions\", \"frogs\", \"tries\", \"nerve\", \"grand\", \"armed\", \"treat\", \"honey\", \"moist\", \"legal\", \"penny\", \"crown\", \"shock\", \"taxes\", \"sixty\", \"altar\", \"pulls\", \"sport\", \"drums\", \"talks\", \"dying\", \"dates\", \"drank\", \"blows\", \"lever\", \"wages\", \"proof\", \"drugs\", \"tanks\", \"sings\", \"tails\", \"pause\", \"herds\", \"arose\", \"hated\", \"clues\", \"novel\", \"shame\", \"burnt\", \"races\", \"flash\", \"weary\", \"heels\", \"token\", \"coats\", \"spare\", \"shiny\", \"alarm\", \"dimes\", \"sixth\", \"clerk\", \"mercy\", \"sunny\", \"guest\", \"float\", \"shone\", \"pipes\", \"worms\", \"bills\", \"sweat\", \"suits\", \"smart\", \"upset\", \"rains\", \"sandy\", \"rainy\", \"parks\", \"sadly\", \"fancy\", \"rider\", \"unity\", \"bunch\", \"rolls\", \"crash\", \"craft\", \"newly\", \"gates\", \"hatch\", \"paths\", \"funds\", \"wider\", \"grace\", \"grave\", \"tides\", \"admit\", \"shift\", \"sails\", \"pupil\", \"tiger\", \"angel\", \"cruel\", \"agent\", \"drama\", \"urged\", \"patch\", \"nests\", \"vital\", \"sword\", \"blame\", \"weeds\", \"screw\", \"vocal\", \"bacon\", \"chalk\", \"cargo\", \"crazy\", \"acted\", \"goats\", \"arise\", \"witch\", \"loves\", \"queer\", \"dwell\", \"backs\", \"ropes\", \"shots\", \"merry\", \"phone\", \"cheek\", \"peaks\", \"ideal\", \"beard\", \"eagle\", \"creek\", \"cries\", \"ashes\", \"stall\", \"yield\", \"mayor\", \"opens\", \"input\", \"fleet\", \"tooth\", \"cubic\", \"wives\", \"burns\", \"poets\", \"apron\", \"spear\", \"organ\", \"cliff\", \"stamp\", \"paste\", \"rural\", \"baked\", \"chase\", \"slice\", \"slant\", \"knock\", \"noisy\", \"sorts\", \"stays\", \"wiped\", \"blown\", \"piled\", \"clubs\", \"cheer\", \"widow\", \"twist\", \"tenth\", \"hides\", \"comma\", \"sweep\", \"spoon\", \"stern\", \"crept\", \"maple\", \"deeds\", \"rides\", \"muddy\", \"crime\", \"jelly\", \"ridge\", \"drift\", \"dusty\", \"devil\", \"tempo\", \"humor\", \"sends\", \"steal\", \"tents\", \"waist\", \"roses\", \"reign\", \"noble\", \"cheap\", \"dense\", \"linen\", \"geese\", \"woven\", \"posts\", \"hired\", \"wrath\", \"salad\", \"bowed\", \"tires\", \"shark\", \"belts\", \"grasp\", \"blast\", \"polar\", \"fungi\", \"tends\", \"pearl\", \"loads\", \"jokes\", \"veins\", \"frost\", \"hears\", \"loses\", \"hosts\", \"diver\", \"phase\", \"toads\", \"alert\", \"tasks\", \"seams\", \"coral\", \"focus\", \"naked\", \"puppy\", \"jumps\", \"spoil\", \"quart\", \"macro\", \"fears\", \"flung\", \"spark\", \"vivid\", \"brook\", \"steer\", \"spray\", \"decay\", \"ports\", \"socks\", \"urban\", \"goals\", \"grant\", \"minus\", \"films\", \"tunes\", \"shaft\", \"firms\", \"skies\", \"bride\", \"wreck\", \"flock\", \"stare\", \"hobby\", \"bonds\", \"dared\", \"faded\", \"thief\", \"crude\", \"pants\", \"flute\", \"votes\", \"tonal\", \"radar\", \"wells\", \"skull\", \"hairs\", \"argue\", \"wears\", \"dolls\", \"voted\", \"caves\", \"cared\", \"broom\", \"scent\", \"panel\", \"fairy\", \"olive\", \"bends\", \"prism\", \"lamps\", \"cable\", \"peach\", \"ruins\", \"rally\", \"schwa\", \"lambs\", \"sells\", \"cools\", \"draft\", \"charm\", \"limbs\", \"brake\", \"gazed\", \"cubes\", \"delay\", \"beams\", \"fetch\", \"ranks\", \"array\", \"harsh\", \"camel\", \"vines\", \"picks\", \"naval\", \"purse\", \"rigid\", \"crawl\", \"toast\", \"soils\", \"sauce\", \"basin\", \"ponds\", \"twins\", \"wrist\", \"fluid\", \"pools\", \"brand\", \"stalk\", \"robot\", \"reeds\", \"hoofs\", \"buses\", \"sheer\", \"grief\", \"bloom\", \"dwelt\", \"melts\", \"risen\", \"flags\", \"knelt\", \"fiber\", \"roofs\", \"freed\", \"armor\", \"piles\", \"aimed\", \"algae\", \"twigs\", \"lemon\", \"ditch\", \"drunk\", \"rests\", \"chill\", \"slain\", \"panic\", \"cords\", \"tuned\", \"crisp\", \"ledge\", \"dived\", \"swamp\", \"clung\", \"stole\", \"molds\", \"yarns\", \"liver\", \"gauge\", \"breed\", \"stool\", \"gulls\", \"awoke\", \"gross\", \"diary\", \"rails\", \"belly\", \"trend\", \"flask\", \"stake\", \"fried\", \"draws\", \"actor\", \"handy\", \"bowls\", \"haste\", \"scope\", \"deals\", \"knots\", \"moons\", \"essay\", \"thump\", \"hangs\", \"bliss\", \"dealt\", \"gains\", \"bombs\", \"clown\", \"palms\", \"cones\", \"roast\", \"tidal\", \"bored\", \"chant\", \"acids\", \"dough\", \"camps\", \"swore\", \"lover\", \"hooks\", \"males\", \"cocoa\", \"punch\", \"award\", \"reins\", \"ninth\", \"noses\", \"links\", \"drain\", \"fills\", \"nylon\", \"lunar\", \"pulse\", \"flown\", \"elbow\", \"fatal\", \"sites\", \"moths\", \"meats\", \"foxes\", \"mined\", \"attic\", \"fiery\", \"mount\", \"usage\", \"swear\", \"snowy\", \"rusty\", \"scare\", \"traps\", \"relax\", \"react\", \"valid\", \"robin\", \"cease\", \"gills\", \"prior\", \"safer\", \"polio\", \"loyal\", \"swell\", \"salty\", \"marsh\", \"vague\", \"weave\", \"mound\", \"seals\", \"mules\", \"virus\", \"scout\", \"acute\", \"windy\", \"stout\", \"folds\", \"seize\", \"hilly\", \"joins\", \"pluck\", \"stack\", \"lords\", \"dunes\", \"burro\", \"hawks\", \"trout\", \"feeds\", \"scarf\", \"halls\", \"coals\", \"towel\", \"souls\", \"elect\", \"buggy\", \"pumps\", \"loans\", \"spins\", \"files\", \"oxide\", \"pains\", \"photo\", \"rival\", \"flats\", \"syrup\", \"rodeo\", \"sands\", \"moose\", \"pints\", \"curly\", \"comic\", \"cloak\", \"onion\", \"clams\", \"scrap\", \"didst\", \"couch\", \"codes\", \"fails\", \"ounce\", \"lodge\", \"greet\", \"gypsy\", \"utter\", \"paved\", \"zones\", \"fours\", \"alley\", \"tiles\", \"bless\", \"crest\", \"elder\", \"kills\", \"yeast\", \"erect\", \"bugle\", \"medal\", \"roles\", \"hound\", \"snail\", \"alter\", \"ankle\", \"relay\", \"loops\", \"zeros\", \"bites\", \"modes\", \"debts\", \"realm\", \"glove\", \"rayon\", \"swims\", \"poked\", \"stray\", \"lifts\", \"maker\", \"lumps\", \"graze\", \"dread\", \"barns\", \"docks\", \"masts\", \"pours\", \"wharf\", \"curse\", \"plump\", \"robes\", \"seeks\", \"cedar\", \"curls\", \"jolly\", \"myths\", \"cages\", \"gloom\", \"locks\", \"pedal\", \"beets\", \"crows\", \"anode\", \"slash\", \"creep\", \"rowed\", \"chips\", \"fists\", \"wines\", \"cares\", \"valve\", \"newer\", \"motel\", \"ivory\", \"necks\", \"clamp\", \"barge\", \"blues\", \"alien\", \"frown\", \"strap\", \"crews\", \"shack\", \"gonna\", \"saves\", \"stump\", \"ferry\", \"idols\", \"cooks\", \"juicy\", \"glare\", \"carts\", \"alloy\", \"bulbs\", \"lawns\", \"lasts\", \"fuels\", \"oddly\", \"crane\", \"filed\", \"weird\", \"shawl\", \"slips\", \"troop\", \"bolts\", \"suite\", \"sleek\", \"quilt\", \"tramp\", \"blaze\", \"atlas\", \"odors\", \"scrub\", \"crabs\", \"probe\", \"logic\", \"adobe\", \"exile\", \"rebel\", \"grind\", \"sting\", \"spine\", \"cling\", \"desks\", \"grove\", \"leaps\", \"prose\", \"lofty\", \"agony\", \"snare\", \"tusks\", \"bulls\", \"moods\", \"humid\", \"finer\", \"dimly\", \"plank\", \"china\", \"pines\", \"guilt\", \"sacks\", \"brace\", \"quote\", \"lathe\", \"gaily\", \"fonts\", \"scalp\", \"adopt\", \"foggy\", \"ferns\", \"grams\", \"clump\", \"perch\", \"tumor\", \"teens\", \"crank\", \"fable\", \"hedge\", \"genes\", \"sober\", \"boast\", \"tract\", \"cigar\", \"unite\", \"owing\", \"thigh\", \"haiku\", \"swish\", \"dikes\", \"wedge\", \"booth\", \"eased\", \"frail\", \"cough\", \"tombs\", \"darts\", \"forts\", \"choir\", \"pouch\", \"pinch\", \"hairy\", \"buyer\", \"torch\", \"vigor\", \"waltz\", \"heats\", \"herbs\", \"users\", \"flint\", \"click\", \"madam\", \"bleak\", \"blunt\", \"aided\", \"lacks\", \"masks\", \"waded\", \"risks\", \"nurse\", \"chaos\", \"sewed\", \"cured\", \"ample\", \"lease\", \"steak\", \"sinks\", \"merit\", \"bluff\", \"bathe\", \"gleam\", \"bonus\", \"colts\", \"shear\", \"gland\", \"silky\", \"skate\", \"birch\", \"anvil\", \"sleds\", \"groan\", \"maids\", \"meets\", \"speck\", \"hymns\", \"hints\", \"drown\", \"bosom\", \"slick\", \"quest\", \"coils\", \"spied\", \"snows\", \"stead\", \"snack\", \"plows\", \"blond\", \"tamed\", \"thorn\", \"waits\", \"glued\", \"banjo\", \"tease\", \"arena\", \"bulky\", \"carve\", \"stunt\", \"warms\", \"shady\", \"razor\", \"folly\", \"leafy\", \"notch\", \"fools\", \"otter\", \"pears\", \"flush\", \"genus\", \"ached\", \"fives\", \"flaps\", \"spout\", \"smote\", \"fumes\", \"adapt\", \"cuffs\", \"tasty\", \"stoop\", \"clips\", \"disks\", \"sniff\", \"lanes\", \"brisk\", \"imply\", \"demon\", \"super\", \"furry\", \"raged\", \"growl\", \"texts\", \"hardy\", \"stung\", \"typed\", \"hates\", \"wiser\", \"timid\", \"serum\", \"beaks\", \"rotor\", \"casts\", \"baths\", \"glide\", \"plots\", \"trait\", \"resin\", \"slums\", \"lyric\", \"puffs\", \"decks\", \"brood\", \"mourn\", \"aloft\", \"abuse\", \"whirl\", \"edged\", \"ovary\", \"quack\", \"heaps\", \"slang\", \"await\", \"civic\", \"saint\", \"bevel\", \"sonar\", \"aunts\", \"packs\", \"froze\", \"tonic\", \"corps\", \"swarm\", \"frank\", \"repay\", \"gaunt\", \"wired\", \"niece\", \"cello\", \"needy\", \"chuck\", \"stony\", \"media\", \"surge\", \"hurts\", \"repel\", \"husky\", \"dated\", \"hunts\", \"mists\", \"exert\", \"dries\", \"mates\", \"sworn\", \"baker\", \"spice\", \"oasis\", \"boils\", \"spurs\", \"doves\", \"sneak\", \"paces\", \"colon\", \"siege\", \"strum\", \"drier\", \"cacao\", \"humus\", \"bales\", \"piped\", \"nasty\", \"rinse\", \"boxer\", \"shrub\", \"amuse\", \"tacks\", \"cited\", \"slung\", \"delta\", \"laden\", \"larva\", \"rents\", \"yells\", \"spool\", \"spill\", \"crush\", \"jewel\", \"snaps\", \"stain\", \"kicks\", \"tying\", \"slits\", \"rated\", \"eerie\", \"smash\", \"plums\", \"zebra\", \"earns\", \"bushy\", \"scary\", \"squad\", \"tutor\", \"silks\", \"slabs\", \"bumps\", \"evils\", \"fangs\", \"snout\", \"peril\", \"pivot\", \"yacht\", \"lobby\", \"jeans\", \"grins\", \"viola\", \"liner\", \"comet\", \"scars\", \"chops\", \"raids\", \"eater\", \"slate\", \"skips\", \"soles\", \"misty\", \"urine\", \"knobs\", \"sleet\", \"holly\", \"pests\", \"forks\", \"grill\", \"trays\", \"pails\", \"borne\", \"tenor\", \"wares\", \"carol\", \"woody\", \"canon\", \"wakes\", \"kitty\", \"miner\", \"polls\", \"shaky\", \"nasal\", \"scorn\", \"chess\", \"taxis\", \"crate\", \"shyly\", \"tulip\", \"forge\", \"nymph\", \"budge\", \"lowly\", \"abide\", \"depot\", \"oases\", \"asses\", \"sheds\", \"fudge\", \"pills\", \"rivet\", \"thine\", \"groom\", \"lanky\", \"boost\", \"broth\", \"heave\", \"gravy\", \"beech\", \"timed\", \"quail\", \"inert\", \"gears\", \"chick\", \"hinge\", \"trash\", \"clash\", \"sighs\", \"renew\", \"bough\", \"dwarf\", \"slows\", \"quill\", \"shave\", \"spore\", \"sixes\", \"chunk\", \"madly\", \"paced\", \"braid\", \"fuzzy\", \"motto\", \"spies\", \"slack\", \"mucus\", \"magma\", \"awful\", \"discs\", \"erase\", \"posed\", \"asset\", \"cider\", \"taper\", \"theft\", \"churn\", \"satin\", \"slots\", \"taxed\", \"bully\", \"sloth\", \"shale\", \"tread\", \"raked\", \"curds\", \"manor\", \"aisle\", \"bulge\", \"loins\", \"stair\", \"tapes\", \"leans\", \"bunks\", \"squat\", \"towed\", \"lance\", \"panes\", \"sakes\", \"heirs\", \"caste\", \"dummy\", \"pores\", \"fauna\", \"crook\", \"poise\", \"epoch\", \"risky\", \"warns\", \"fling\", \"berry\", \"grape\", \"flank\", \"drags\", \"squid\", \"pelts\", \"icing\", \"irony\", \"irons\", \"barks\", \"whoop\", \"choke\", \"diets\", \"whips\", \"tally\", \"dozed\", \"twine\", \"kites\", \"bikes\", \"ticks\", \"riots\", \"roars\", \"vault\", \"looms\", \"scold\", \"blink\", \"dandy\", \"pupae\", \"sieve\", \"spike\", \"ducts\", \"lends\", \"pizza\", \"brink\", \"widen\", \"plumb\", \"pagan\", \"feats\", \"bison\", \"soggy\", \"scoop\", \"argon\", \"nudge\", \"skiff\", \"amber\", \"sexes\", \"rouse\", \"salts\", \"hitch\", \"exalt\", \"leash\", \"dined\", \"chute\", \"snort\", \"gusts\", \"melon\", \"cheat\", \"reefs\", \"llama\", \"lasso\", \"debut\", \"quota\", \"oaths\", \"prone\", \"mixes\", \"rafts\", \"dives\", \"stale\", \"inlet\", \"flick\", \"pinto\", \"brows\", \"untie\", \"batch\", \"greed\", \"chore\", \"stirs\", \"blush\", \"onset\", \"barbs\", \"volts\", \"beige\", \"swoop\", \"paddy\", \"laced\", \"shove\", \"jerky\", \"poppy\", \"leaks\", \"fares\", \"dodge\", \"godly\", \"squaw\", \"affix\", \"brute\", \"nicer\", \"undue\", \"snarl\", \"merge\", \"doses\", \"showy\", \"daddy\", \"roost\", \"vases\", \"swirl\", \"petty\", \"colds\", \"curry\", \"cobra\", \"genie\", \"flare\", \"messy\", \"cores\", \"soaks\", \"ripen\", \"whine\", \"amino\", \"plaid\", \"spiny\", \"mowed\", \"baton\", \"peers\", \"vowed\", \"pious\", \"swans\", \"exits\", \"afoot\", \"plugs\", \"idiom\", \"chili\", \"rites\", \"serfs\", \"cleft\", \"berth\", \"grubs\", \"annex\", \"dizzy\", \"hasty\", \"latch\", \"wasps\", \"mirth\", \"baron\", \"plead\", \"aloof\", \"aging\", \"pixel\", \"bared\", \"mummy\", \"hotly\", \"auger\", \"buddy\", \"chaps\", \"badge\", \"stark\", \"fairs\", \"gully\", \"mumps\", \"emery\", \"filly\", \"ovens\", \"drone\", \"gauze\", \"idiot\", \"fussy\", \"annoy\", \"shank\", \"gouge\", \"bleed\", \"elves\", \"roped\", \"unfit\", \"baggy\", \"mower\", \"scant\", \"grabs\", \"fleas\", \"lousy\", \"album\", \"sawed\", \"cooky\", \"murky\", \"infer\", \"burly\", \"waged\", \"dingy\", \"brine\", \"kneel\", \"creak\", \"vanes\", \"smoky\", \"spurt\", \"combs\", \"easel\", \"laces\", \"humps\", \"rumor\", \"aroma\", \"horde\", \"swiss\", \"leapt\", \"opium\", \"slime\", \"afire\", \"pansy\", \"mares\", \"soaps\", \"husks\", \"snips\", \"hazel\", \"lined\", \"cafes\", \"naive\", \"wraps\", \"sized\", \"piers\", \"beset\", \"agile\", \"tongs\", \"steed\", \"fraud\", \"booty\", \"valor\", \"downy\", \"witty\", \"mossy\", \"psalm\", \"scuba\", \"tours\", \"polka\", \"milky\", \"gaudy\", \"shrug\", \"tufts\", \"wilds\", \"laser\", \"truss\", \"hares\", \"creed\", \"lilac\", \"siren\", \"tarry\", \"bribe\", \"swine\", \"muted\", \"flips\", \"cures\", \"sinew\", \"boxed\", \"hoops\", \"gasps\", \"hoods\", \"niche\", \"yucca\", \"glows\", \"sewer\", \"whack\", \"fuses\", \"gowns\", \"droop\", \"bucks\", \"pangs\", \"mails\", \"whisk\", \"haven\", \"clasp\", \"sling\", \"stint\", \"urges\", \"champ\", \"piety\", \"chirp\", \"pleat\", \"posse\", \"sunup\", \"menus\", \"howls\", \"quake\", \"knack\", \"plaza\", \"fiend\", \"caked\", \"bangs\", \"erupt\", \"poker\", \"olden\", \"cramp\", \"voter\", \"poses\", \"manly\", \"slump\", \"fined\", \"grips\", \"gaped\", \"purge\", \"hiked\", \"maize\", \"fluff\", \"strut\", \"sloop\", \"prowl\", \"roach\", \"cocks\", \"bland\", \"dials\", \"plume\", \"slaps\", \"soups\", \"dully\", \"wills\", \"foams\", \"solos\", \"skier\", \"eaves\", \"totem\", \"fused\", \"latex\", \"veils\", \"mused\", \"mains\", \"myrrh\", \"racks\", \"galls\", \"gnats\", \"bouts\", \"sisal\", \"shuts\", \"hoses\", \"dryly\", \"hover\", \"gloss\", \"seeps\", \"denim\", \"putty\", \"guppy\", \"leaky\", \"dusky\", \"filth\", \"oboes\", \"spans\", \"fowls\", \"adorn\", \"glaze\", \"haunt\", \"dares\", \"obeys\", \"bakes\", \"abyss\", \"smelt\", \"gangs\", \"aches\", \"trawl\", \"claps\", \"undid\", \"spicy\", \"hoist\", \"fades\", \"vicar\", \"acorn\", \"pussy\", \"gruff\", \"musty\", \"tarts\", \"snuff\", \"hunch\", \"truce\", \"tweed\", \"dryer\", \"loser\", \"sheaf\", \"moles\", \"lapse\", \"tawny\", \"vexed\", \"autos\", \"wager\", \"domes\", \"sheen\", \"clang\", \"spade\", \"sowed\", \"broil\", \"slyly\", \"studs\", \"grunt\", \"donor\", \"slugs\", \"aspen\", \"homer\", \"croak\", \"tithe\", \"halts\", \"avert\", \"havoc\", \"hogan\", \"glint\", \"ruddy\", \"jeeps\", \"flaky\", \"ladle\", \"taunt\", \"snore\", \"fines\", \"props\", \"prune\", \"pesos\", \"radii\", \"pokes\", \"tiled\", \"daisy\", \"heron\", \"villa\", \"farce\", \"binds\", \"cites\", \"fixes\", \"jerks\", \"livid\", \"waked\", \"inked\", \"booms\", \"chews\", \"licks\", \"hyena\", \"scoff\", \"lusty\", \"sonic\", \"smith\", \"usher\", \"tucks\", \"vigil\", \"molts\", \"sects\", \"spars\", \"dumps\", \"scaly\", \"wisps\", \"sores\", \"mince\", \"panda\", \"flier\", \"axles\", \"plied\", \"booby\", \"patio\", \"rabbi\", \"petal\", \"polyp\", \"tints\", \"grate\", \"troll\", \"tolls\", \"relic\", \"phony\", \"bleat\", \"flaws\", \"flake\", \"snags\", \"aptly\", \"drawl\", \"ulcer\", \"soapy\", \"bossy\", \"monks\", \"crags\", \"caged\", \"twang\", \"diner\", \"taped\", \"cadet\", \"grids\", \"spawn\", \"guile\", \"noose\", \"mores\", \"girth\", \"slimy\", \"aides\", \"spasm\", \"burrs\", \"alibi\", \"lymph\", \"saucy\", \"muggy\", \"liter\", \"joked\", \"goofy\", \"exams\", \"enact\", \"stork\", \"lured\", \"toxic\", \"omens\", \"nears\", \"covet\", \"wrung\", \"forum\", \"venom\", \"moody\", \"alder\", \"sassy\", \"flair\", \"guild\", \"prays\", \"wrens\", \"hauls\", \"stave\", \"tilts\", \"pecks\", \"stomp\", \"gales\", \"tempt\", \"capes\", \"mesas\", \"omits\", \"tepee\", \"harry\", \"wring\", \"evoke\", \"limes\", \"cluck\", \"lunge\", \"highs\", \"canes\", \"giddy\", \"lithe\", \"verge\", \"khaki\", \"queue\", \"loath\", \"foyer\", \"outdo\", \"fared\", \"deter\", \"crumb\", \"astir\", \"spire\", \"jumpy\", \"extol\", \"buoys\", \"stubs\", \"lucid\", \"thong\", \"afore\", \"whiff\", \"maxim\", \"hulls\", \"clogs\", \"slats\", \"jiffy\", \"arbor\", \"cinch\", \"igloo\", \"goody\", \"gazes\", \"dowel\", \"calms\", \"bitch\", \"scowl\", \"gulps\", \"coded\", \"waver\", \"mason\", \"lobes\", \"ebony\", \"flail\", \"isles\", \"clods\", \"dazed\", \"adept\", \"oozed\", \"sedan\", \"clays\", \"warts\", \"ketch\", \"skunk\", \"manes\", \"adore\", \"sneer\", \"mango\", \"fiord\", \"flora\", \"roomy\", \"minks\", \"thaws\", \"watts\", \"freer\", \"exult\", \"plush\", \"paled\", \"twain\", \"clink\", \"scamp\", \"pawed\", \"grope\", \"bravo\", \"gable\", \"stink\", \"sever\", \"waned\", \"rarer\", \"regal\", \"wards\", \"fawns\", \"babes\", \"unify\", \"amend\", \"oaken\", \"glade\", \"visor\", \"hefty\", \"nines\", \"throb\", \"pecan\", \"butts\", \"pence\", \"sills\", \"jails\", \"flyer\", \"saber\", \"nomad\", \"miter\", \"beeps\", \"domed\", \"gulfs\", \"curbs\", \"heath\", \"moors\", \"aorta\", \"larks\", \"tangy\", \"wryly\", \"cheep\", \"rages\", \"evade\", \"lures\", \"freak\", \"vogue\", \"tunic\", \"slams\", \"knits\", \"dumpy\", \"mania\", \"spits\", \"firth\", \"hikes\", \"trots\", \"nosed\", \"clank\", \"dogma\", \"bloat\", \"balsa\", \"graft\", \"middy\", \"stile\", \"keyed\", \"finch\", \"sperm\", \"chaff\", \"wiles\", \"amigo\", \"copra\", \"amiss\", \"eying\", \"twirl\", \"lurch\", \"popes\", \"chins\", \"smock\", \"tines\", \"guise\", \"grits\", \"junks\", \"shoal\", \"cache\", \"tapir\", \"atoll\", \"deity\", \"toils\", \"spree\", \"mocks\", \"scans\", \"shorn\", \"revel\", \"raven\", \"hoary\", \"reels\", \"scuff\", \"mimic\", \"weedy\", \"corny\", \"truer\", \"rouge\", \"ember\", \"floes\", \"torso\", \"wipes\", \"edict\", \"sulky\", \"recur\", \"groin\", \"baste\", \"kinks\", \"surer\", \"piggy\", \"moldy\", \"franc\", \"liars\", \"inept\", \"gusty\", \"facet\", \"jetty\", \"equip\", \"leper\", \"slink\", \"soars\", \"cater\", \"dowry\", \"sided\", \"yearn\", \"decoy\", \"taboo\", \"ovals\", \"heals\", \"pleas\", \"beret\", \"spilt\", \"gayly\", \"rover\", \"endow\", \"pygmy\", \"carat\", \"abbey\", \"vents\", \"waken\", \"chimp\", \"fumed\", \"sodas\", \"vinyl\", \"clout\", \"wades\", \"mites\", \"smirk\", \"bores\", \"bunny\", \"surly\", \"frock\", \"foray\", \"purer\", \"milks\", \"query\", \"mired\", \"blare\", \"froth\", \"gruel\", \"navel\", \"paler\", \"puffy\", \"casks\", \"grime\", \"derby\", \"mamma\", \"gavel\", \"teddy\", \"vomit\", \"moans\", \"allot\", \"defer\", \"wield\", \"viper\", \"louse\", \"erred\", \"hewed\", \"abhor\", \"wrest\", \"waxen\", \"adage\", \"ardor\", \"stabs\", \"pored\", \"rondo\", \"loped\", \"fishy\", \"bible\", \"hires\", \"foals\", \"feuds\", \"jambs\", \"thuds\", \"jeers\", \"knead\", \"quirk\", \"rugby\", \"expel\", \"greys\", \"rigor\", \"ester\", \"lyres\", \"aback\", \"glues\", \"lotus\", \"lurid\", \"rungs\", \"hutch\", \"thyme\", \"valet\", \"tommy\", \"yokes\", \"epics\", \"trill\", \"pikes\", \"ozone\", \"caper\", \"chime\", \"frees\", \"famed\", \"leech\", \"smite\", \"neigh\", \"erode\", \"robed\", \"hoard\", \"salve\", \"conic\", \"gawky\", \"craze\", \"jacks\", \"gloat\", \"mushy\", \"rumps\", \"fetus\", \"wince\", \"pinks\", \"shalt\", \"toots\", \"glens\", \"cooed\", \"rusts\", \"stews\", \"shred\", \"parka\", \"chugs\", \"winks\", \"clots\", \"shrew\", \"booed\", \"filmy\", \"juror\", \"dents\", \"gummy\", \"grays\", \"hooky\", \"butte\", \"dogie\", \"poled\", \"reams\", \"fifes\", \"spank\", \"gayer\", \"tepid\", \"spook\", \"taint\", \"flirt\", \"rogue\", \"spiky\", \"opals\", \"miser\", \"cocky\", \"coyly\", \"balmy\", \"slosh\", \"brawl\", \"aphid\", \"faked\", \"hydra\", \"brags\", \"chide\", \"yanks\", \"allay\", \"video\", \"altos\", \"eases\", \"meted\", \"chasm\", \"longs\", \"excel\", \"taffy\", \"impel\", \"savor\", \"koala\", \"quays\", \"dawns\", \"proxy\", \"clove\", \"duets\", \"dregs\", \"tardy\", \"briar\", \"grimy\", \"ultra\", \"meaty\", \"halve\", \"wails\", \"suede\", \"mauve\", \"envoy\", \"arson\", \"coves\", \"gooey\", \"brews\", \"sofas\", \"chums\", \"amaze\", \"zooms\", \"abbot\", \"halos\", \"scour\", \"suing\", \"cribs\", \"sagas\", \"enema\", \"wordy\", \"harps\", \"coupe\", \"molar\", \"flops\", \"weeps\", \"mints\", \"ashen\", \"felts\", \"askew\", \"munch\", \"mewed\", \"divan\", \"vices\", \"jumbo\", \"blobs\", \"blots\", \"spunk\", \"acrid\", \"topaz\", \"cubed\", \"clans\", \"flees\", \"slurs\", \"gnaws\", \"welds\", \"fords\", \"emits\", \"agate\", \"pumas\", \"mends\", \"darks\", \"dukes\", \"plies\", \"canny\", \"hoots\", \"oozes\", \"lamed\", \"fouls\", \"clefs\", \"nicks\", \"mated\", \"skims\", \"brunt\", \"tuber\", \"tinge\", \"fates\", \"ditty\", \"thins\", \"frets\", \"eider\", \"bayou\", \"mulch\", \"fasts\", \"amass\", \"damps\", \"morns\", \"friar\", \"palsy\", \"vista\", \"croon\", \"conch\", \"udder\", \"tacos\", \"skits\", \"mikes\", \"quits\", \"preen\", \"aster\", \"adder\", \"elegy\", \"pulpy\", \"scows\", \"baled\", \"hovel\", \"lavas\", \"crave\", \"optic\", \"welts\", \"busts\", \"knave\", \"razed\", \"shins\", \"totes\", \"scoot\", \"dears\", \"crock\", \"mutes\", \"trims\", \"skein\", \"doted\", \"shuns\", \"veers\", \"fakes\", \"yoked\", \"wooed\", \"hacks\", \"sprig\", \"wands\", \"lulls\", \"seers\", \"snobs\", \"nooks\", \"pined\", \"perky\", \"mooed\", \"frill\", \"dines\", \"booze\", \"tripe\", \"prong\", \"drips\", \"odder\", \"levee\", \"antic\", \"sidle\", \"pithy\", \"corks\", \"yelps\", \"joker\", \"fleck\", \"buffs\", \"scram\", \"tiers\", \"bogey\", \"doled\", \"irate\", \"vales\", \"coped\", \"hails\", \"elude\", \"bulks\", \"aired\", \"vying\", \"stags\", \"strew\", \"cocci\", \"pacts\", \"scabs\", \"silos\", \"dusts\", \"yodel\", \"terse\", \"jaded\", \"baser\", \"jibes\", \"foils\", \"sways\", \"forgo\", \"slays\", \"preys\", \"treks\", \"quell\", \"peeks\", \"assay\", \"lurks\", \"eject\", \"boars\", \"trite\", \"belch\", \"gnash\", \"wanes\", \"lutes\", \"whims\", \"dosed\", \"chewy\", \"snipe\", \"umbra\", \"teems\", \"dozes\", \"kelps\", \"upped\", \"brawn\", \"doped\", \"shush\", \"rinds\", \"slush\", \"moron\", \"voile\", \"woken\", \"fjord\", \"sheik\", \"jests\", \"kayak\", \"slews\", \"toted\", \"saner\", \"drape\", \"patty\", \"raves\", \"sulfa\", \"grist\", \"skied\", \"vixen\", \"civet\", \"vouch\", \"tiara\", \"homey\", \"moped\", \"runts\", \"serge\", \"kinky\", \"rills\", \"corns\", \"brats\", \"pries\", \"amble\", \"fries\", \"loons\", \"tsars\", \"datum\", \"musky\", \"pigmy\", \"gnome\", \"ravel\", \"ovule\", \"icily\", \"liken\", \"lemur\", \"frays\", \"silts\", \"sifts\", \"plods\", \"ramps\", \"tress\", \"earls\", \"dudes\", \"waive\", \"karat\", \"jolts\", \"peons\", \"beers\", \"horny\", \"pales\", \"wreak\", \"lairs\", \"lynch\", \"stank\", \"swoon\", \"idler\", \"abort\", \"blitz\", \"ensue\", \"atone\", \"bingo\", \"roves\", \"kilts\", \"scald\", \"adios\", \"cynic\", \"dulls\", \"memos\", \"elfin\", \"dales\", \"peels\", \"peals\", \"bares\", \"sinus\", \"crone\", \"sable\", \"hinds\", \"shirk\", \"enrol\", \"wilts\", \"roams\", \"duped\", \"cysts\", \"mitts\", \"safes\", \"spats\", \"coops\", \"filet\", \"knell\", \"refit\", \"covey\", \"punks\", \"kilns\", \"fitly\", \"abate\", \"talcs\", \"heeds\", \"duels\", \"wanly\", \"ruffs\", \"gauss\", \"lapel\", \"jaunt\", \"whelp\", \"cleat\", \"gauzy\", \"dirge\", \"edits\", \"wormy\", \"moats\", \"smear\", \"prods\", \"bowel\", \"frisk\", \"vests\", \"bayed\", \"rasps\", \"tames\", \"delve\", \"embed\", \"befit\", \"wafer\", \"ceded\", \"novas\", \"feign\", \"spews\", \"larch\", \"huffs\", \"doles\", \"mamas\", \"hulks\", \"pried\", \"brims\", \"irked\", \"aspic\", \"swipe\", \"mealy\", \"skimp\", \"bluer\", \"slake\", \"dowdy\", \"penis\", \"brays\", \"pupas\", \"egret\", \"flunk\", \"phlox\", \"gripe\", \"peony\", \"douse\", \"blurs\", \"darns\", \"slunk\", \"lefts\", \"chats\", \"inane\", \"vials\", \"stilt\", \"rinks\", \"woofs\", \"wowed\", \"bongs\", \"frond\", \"ingot\", \"evict\", \"singe\", \"shyer\", \"flied\", \"slops\", \"dolts\", \"drool\", \"dells\", \"whelk\", \"hippy\", \"feted\", \"ether\", \"cocos\", \"hives\", \"jibed\", \"mazes\", \"trios\", \"sirup\", \"squab\", \"laths\", \"leers\", \"pasta\", \"rifts\", \"lopes\", \"alias\", \"whirs\", \"diced\", \"slags\", \"lodes\", \"foxed\", \"idled\", \"prows\", \"plait\", \"malts\", \"chafe\", \"cower\", \"toyed\", \"chefs\", \"keels\", \"sties\", \"racer\", \"etude\", \"sucks\", \"sulks\", \"micas\", \"czars\", \"copse\", \"ailed\", \"abler\", \"rabid\", \"golds\", \"croup\", \"snaky\", \"visas\", \"palls\", \"mopes\", \"boned\", \"wispy\", \"raved\", \"swaps\", \"junky\", \"doily\", \"pawns\", \"tamer\", \"poach\", \"baits\", \"damns\", \"gumbo\", \"daunt\", \"prank\", \"hunks\", \"buxom\", \"heres\", \"honks\", \"stows\", \"unbar\", \"idles\", \"routs\", \"sages\", \"goads\", \"remit\", \"copes\", \"deign\", \"culls\", \"girds\", \"haves\", \"lucks\", \"stunk\", \"dodos\", \"shams\", \"snubs\", \"icons\", \"usurp\", \"dooms\", \"hells\", \"soled\", \"comas\", \"paves\", \"maths\", \"perks\", \"limps\", \"wombs\", \"blurb\", \"daubs\", \"cokes\", \"sours\", \"stuns\", \"cased\", \"musts\", \"coeds\", \"cowed\", \"aping\", \"zoned\", \"rummy\", \"fetes\", \"skulk\", \"quaff\", \"rajah\", \"deans\", \"reaps\", \"galas\", \"tills\", \"roved\", \"kudos\", \"toned\", \"pared\", \"scull\", \"vexes\", \"punts\", \"snoop\", \"bails\", \"dames\", \"hazes\", \"lores\", \"marts\", \"voids\", \"ameba\", \"rakes\", \"adzes\", \"harms\", \"rears\", \"satyr\", \"swill\", \"hexes\", \"colic\", \"leeks\", \"hurls\", \"yowls\", \"ivies\", \"plops\", \"musks\", \"papaw\", \"jells\", \"bused\", \"cruet\", \"bided\", \"filch\", \"zests\", \"rooks\", \"laxly\", \"rends\", \"loams\", \"basks\", \"sires\", \"carps\", \"pokey\", \"flits\", \"muses\", \"bawls\", \"shuck\", \"viler\", \"lisps\", \"peeps\", \"sorer\", \"lolls\", \"prude\", \"diked\", \"floss\", \"flogs\", \"scums\", \"dopes\", \"bogie\", \"pinky\", \"leafs\", \"tubas\", \"scads\", \"lowed\", \"yeses\", \"biked\", \"qualm\", \"evens\", \"caned\", \"gawks\", \"whits\", \"wooly\", \"gluts\", \"romps\", \"bests\", \"dunce\", \"crony\", \"joist\", \"tunas\", \"boner\", \"malls\", \"parch\", \"avers\", \"crams\", \"pares\", \"dally\", \"bigot\", \"kales\", \"flays\", \"leach\", \"gushy\", \"pooch\", \"huger\", \"slyer\", \"golfs\", \"mires\", \"flues\", \"loafs\", \"arced\", \"acnes\", \"neons\", \"fiefs\", \"dints\", \"dazes\", \"pouts\", \"cored\", \"yules\", \"lilts\", \"beefs\", \"mutts\", \"fells\", \"cowls\", \"spuds\", \"lames\", \"jawed\", \"dupes\", \"deads\", \"bylaw\", \"noons\", \"nifty\", \"clued\", \"vireo\", \"gapes\", \"metes\", \"cuter\", \"maims\", \"droll\", \"cupid\", \"mauls\", \"sedge\", \"papas\", \"wheys\", \"eking\", \"loots\", \"hilts\", \"meows\", \"beaus\", \"dices\", \"peppy\", \"riper\", \"fogey\", \"gists\", \"yogas\", \"gilts\", \"skews\", \"cedes\", \"zeals\", \"alums\", \"okays\", \"elope\", \"grump\", \"wafts\", \"soots\", \"blimp\", \"hefts\", \"mulls\", \"hosed\", \"cress\", \"doffs\", \"ruder\", \"pixie\", \"waifs\", \"ousts\", \"pucks\", \"biers\", \"gulch\", \"suets\", \"hobos\", \"lints\", \"brans\", \"teals\", \"garbs\", \"pewee\", \"helms\", \"turfs\", \"quips\", \"wends\", \"banes\", \"napes\", \"icier\", \"swats\", \"bagel\", \"hexed\", \"ogres\", \"goner\", \"gilds\", \"pyres\", \"lards\", \"bides\", \"paged\", \"talon\", \"flout\", \"medic\", \"veals\", \"putts\", \"dirks\", \"dotes\", \"tippy\", \"blurt\", \"piths\", \"acing\", \"barer\", \"whets\", \"gaits\", \"wools\", \"dunks\", \"heros\", \"swabs\", \"dirts\", \"jutes\", \"hemps\", \"surfs\", \"okapi\", \"chows\", \"shoos\", \"dusks\", \"parry\", \"decal\", \"furls\", \"cilia\", \"sears\", \"novae\", \"murks\", \"warps\", \"slues\", \"lamer\", \"saris\", \"weans\", \"purrs\", \"dills\", \"togas\", \"newts\", \"meany\", \"bunts\", \"razes\", \"goons\", \"wicks\", \"ruses\", \"vends\", \"geode\", \"drake\", \"judos\", \"lofts\", \"pulps\", \"lauds\", \"mucks\", \"vises\", \"mocha\", \"oiled\", \"roman\", \"ethyl\", \"gotta\", \"fugue\", \"smack\", \"gourd\", \"bumpy\", \"radix\", \"fatty\", \"borax\", \"cubit\", \"cacti\", \"gamma\", \"focal\", \"avail\", \"papal\", \"golly\", \"elite\", \"versa\", \"billy\", \"adieu\", \"annum\", \"howdy\", \"rhino\", \"norms\", \"bobby\", \"axiom\", \"setup\", \"yolks\", \"terns\", \"mixer\", \"genre\", \"knoll\", \"abode\", \"junta\", \"gorge\", \"combo\", \"alpha\", \"overt\", \"kinda\", \"spelt\", \"prick\", \"nobly\", \"ephod\", \"audio\", \"modal\", \"veldt\", \"warty\", \"fluke\", \"bonny\", \"bream\", \"rosin\", \"bolls\", \"doers\", \"downs\", \"beady\", \"motif\", \"humph\", \"fella\", \"mould\", \"crepe\", \"kerns\", \"aloha\", \"glyph\", \"azure\", \"riser\", \"blest\", \"locus\", \"lumpy\", \"beryl\", \"wanna\", \"brier\", \"tuner\", \"rowdy\", \"mural\", \"timer\", \"canst\", \"krill\", \"quoth\", \"lemme\", \"triad\", \"tenon\", \"amply\", \"deeps\", \"padre\", \"leant\", \"pacer\", \"octal\", \"dolly\", \"trans\", \"sumac\", \"foamy\", \"lolly\", \"giver\", \"quipu\", \"codex\", \"manna\", \"unwed\", \"vodka\", \"ferny\", \"salon\", \"duple\", \"boron\", \"revue\", \"crier\", \"alack\", \"inter\", \"dilly\", \"whist\", \"cults\", \"spake\", \"reset\", \"loess\", \"decor\", \"mover\", \"verve\", \"ethic\", \"gamut\", \"lingo\", \"dunno\", \"align\", \"sissy\", \"incur\", \"reedy\", \"avant\", \"piper\", \"waxer\", \"calyx\", \"basil\", \"coons\", \"seine\", \"piney\", \"lemma\", \"trams\", \"winch\", \"whirr\", \"saith\", \"ionic\", \"heady\", \"harem\", \"tummy\", \"sally\", \"shied\", \"dross\", \"farad\", \"saver\", \"tilde\", \"jingo\", \"bower\", \"serif\", \"facto\", \"belle\", \"inset\", \"bogus\", \"caved\", \"forte\", \"sooty\", \"bongo\", \"toves\", \"credo\", \"basal\", \"yella\", \"aglow\", \"glean\", \"gusto\", \"hymen\", \"ethos\", \"terra\", \"brash\", \"scrip\", \"swash\", \"aleph\", \"tinny\", \"itchy\", \"wanta\", \"trice\", \"jowls\", \"gongs\", \"garde\", \"boric\", \"twill\", \"sower\", \"henry\", \"awash\", \"libel\", \"spurn\", \"sabre\", \"rebut\", \"penal\", \"obese\", \"sonny\", \"quirt\", \"mebbe\", \"tacit\", \"greek\", \"xenon\", \"hullo\", \"pique\", \"roger\", \"negro\", \"hadst\", \"gecko\", \"beget\", \"uncut\", \"aloes\", \"louis\", \"quint\", \"clunk\", \"raped\", \"salvo\", \"diode\", \"matey\", \"hertz\", \"xylem\", \"kiosk\", \"apace\", \"cawed\", \"peter\", \"wench\", \"cohos\", \"sorta\", \"gamba\", \"bytes\", \"tango\", \"nutty\", \"axial\", \"aleck\", \"natal\", \"clomp\", \"gored\", \"siree\", \"bandy\", \"gunny\", \"runic\", \"whizz\", \"rupee\", \"fated\", \"wiper\", \"bards\", \"briny\", \"staid\", \"hocks\", \"ochre\", \"yummy\", \"gents\", \"soupy\", \"roper\", \"swath\", \"cameo\", \"edger\", \"spate\", \"gimme\", \"ebbed\", \"breve\", \"theta\", \"deems\", \"dykes\", \"servo\", \"telly\", \"tabby\", \"tares\", \"blocs\", \"welch\", \"ghoul\", \"vitae\", \"cumin\", \"dinky\", \"bronc\", \"tabor\", \"teeny\", \"comer\", \"borer\", \"sired\", \"privy\", \"mammy\", \"deary\", \"gyros\", \"sprit\", \"conga\", \"quire\", \"thugs\", \"furor\", \"bloke\", \"runes\", \"bawdy\", \"cadre\", \"toxin\", \"annul\", \"egged\", \"anion\", \"nodes\", \"picky\", \"stein\", \"jello\", \"audit\", \"echos\", \"fagot\", \"letup\", \"eyrie\", \"fount\", \"caped\", \"axons\", \"amuck\", \"banal\", \"riled\", \"petit\", \"umber\", \"miler\", \"fibre\", \"agave\", \"bated\", \"bilge\", \"vitro\", \"feint\", \"pudgy\", \"mater\", \"manic\", \"umped\", \"pesky\", \"strep\", \"slurp\", \"pylon\", \"puree\", \"caret\", \"temps\", \"newel\", \"yawns\", \"seedy\", \"treed\", \"coups\", \"rangy\", \"brads\", \"mangy\", \"loner\", \"circa\", \"tibia\", \"afoul\", \"mommy\", \"titer\", \"carne\", \"kooky\", \"motes\", \"amity\", \"suave\", \"hippo\", \"curvy\", \"samba\", \"newsy\", \"anise\", \"imams\", \"tulle\", \"aways\", \"liven\", \"hallo\", \"wales\", \"opted\", \"canto\", \"idyll\", \"bodes\", \"curio\", \"wrack\", \"hiker\", \"chive\", \"yokel\", \"dotty\", \"demur\", \"cusps\", \"specs\", \"quads\", \"laity\", \"toner\", \"decry\", \"writs\", \"saute\", \"clack\", \"aught\", \"logos\", \"tipsy\", \"natty\", \"ducal\", \"bidet\", \"bulgy\", \"metre\", \"lusts\", \"unary\", \"goeth\", \"baler\", \"sited\", \"shies\", \"hasps\", \"brung\", \"holed\", \"swank\", \"looky\", \"melee\", \"huffy\", \"loamy\", \"pimps\", \"titan\", \"binge\", \"shunt\", \"femur\", \"libra\", \"seder\", \"honed\", \"annas\", \"coypu\", \"shims\", \"zowie\", \"jihad\", \"savvy\", \"nadir\", \"basso\", \"monic\", \"maned\", \"mousy\", \"omega\", \"laver\", \"prima\", \"picas\", \"folio\", \"mecca\", \"reals\", \"troth\", \"testy\", \"balky\", \"crimp\", \"chink\", \"abets\", \"splat\", \"abaci\", \"vaunt\", \"cutie\", \"pasty\", \"moray\", \"levis\", \"ratty\", \"islet\", \"joust\", \"motet\", \"viral\", \"nukes\", \"grads\", \"comfy\", \"voila\", \"woozy\", \"blued\", \"whomp\", \"sward\", \"metro\", \"skeet\", \"chine\", \"aerie\", \"bowie\", \"tubby\", \"emirs\", \"coati\", \"unzip\", \"slobs\", \"trike\", \"funky\", \"ducat\", \"dewey\", \"skoal\", \"wadis\", \"oomph\", \"taker\", \"minim\", \"getup\", \"stoic\", \"synod\", \"runty\", \"flyby\", \"braze\", \"inlay\", \"venue\", \"louts\", \"peaty\", \"orlon\", \"humpy\", \"radon\", \"beaut\", \"raspy\", \"unfed\", \"crick\", \"nappy\", \"vizor\", \"yipes\", \"rebus\", \"divot\", \"kiwis\", \"vetch\", \"squib\", \"sitar\", \"kiddo\", \"dyers\", \"cotta\", \"matzo\", \"lager\", \"zebus\", \"crass\", \"dacha\", \"kneed\", \"dicta\", \"fakir\", \"knurl\", \"runny\", \"unpin\", \"julep\", \"globs\", \"nudes\", \"sushi\", \"tacky\", \"stoke\", \"kaput\", \"butch\", \"hulas\", \"croft\", \"achoo\", \"genii\", \"nodal\", \"outgo\", \"spiel\", \"viols\", \"fetid\", \"cagey\", \"fudgy\", \"epoxy\", \"leggy\", \"hanky\", \"lapis\", \"felon\", \"beefy\", \"coots\", \"melba\", \"caddy\", \"segue\", \"betel\", \"frizz\", \"drear\", \"kooks\", \"turbo\", \"hoagy\", \"moult\", \"helix\", \"zonal\", \"arias\", \"nosey\", \"paean\", \"lacey\", \"banns\", \"swain\", \"fryer\", \"retch\", \"tenet\", \"gigas\", \"whiny\", \"ogled\", \"rumen\", \"begot\", \"cruse\", \"abuts\", \"riven\", \"balks\", \"sines\", \"sigma\", \"abase\", \"ennui\", \"gores\", \"unset\", \"augur\", \"sated\", \"odium\", \"latin\", \"dings\", \"moire\", \"scion\", \"henna\", \"kraut\", \"dicks\", \"lifer\", \"prigs\", \"bebop\", \"gages\", \"gazer\", \"fanny\", \"gibes\", \"aural\", \"tempi\", \"hooch\", \"rapes\", \"snuck\", \"harts\", \"techs\", \"emend\", \"ninny\", \"guava\", \"scarp\", \"liege\", \"tufty\", \"sepia\", \"tomes\", \"carob\", \"emcee\", \"prams\", \"poser\", \"verso\", \"hubba\", \"joule\", \"baize\", \"blips\", \"scrim\", \"cubby\", \"clave\", \"winos\", \"rearm\", \"liens\", \"lumen\", \"chump\", \"nanny\", \"trump\", \"fichu\", \"chomp\", \"homos\", \"purty\", \"maser\", \"woosh\", \"patsy\", \"shill\", \"rusks\", \"avast\", \"swami\", \"boded\", \"ahhhh\", \"lobed\", \"natch\", \"shish\", \"tansy\", \"snoot\", \"payer\", \"altho\", \"sappy\", \"laxer\", \"hubby\", \"aegis\", \"riles\", \"ditto\", \"jazzy\", \"dingo\", \"quasi\", \"septa\", \"peaky\", \"lorry\", \"heerd\", \"bitty\", \"payee\", \"seamy\", \"apses\", \"imbue\", \"belie\", \"chary\", \"spoof\", \"phyla\", \"clime\", \"babel\", \"wacky\", \"sumps\", \"skids\", \"khans\", \"crypt\", \"inure\", \"nonce\", \"outen\", \"faire\", \"hooey\", \"anole\", \"kazoo\", \"calve\", \"limbo\", \"argot\", \"ducky\", \"faker\", \"vibes\", \"gassy\", \"unlit\", \"nervy\", \"femme\", \"biter\", \"fiche\", \"boors\", \"gaffe\", \"saxes\", \"recap\", \"synch\", \"facie\", \"dicey\", \"ouija\", \"hewer\", \"legit\", \"gurus\", \"edify\", \"tweak\", \"caron\", \"typos\", \"rerun\", \"polly\", \"surds\", \"hamza\", \"nulls\", \"hater\", \"lefty\", \"mogul\", \"mafia\", \"debug\", \"pates\", \"blabs\", \"splay\", \"talus\", \"porno\", \"moola\", \"nixed\", \"kilos\", \"snide\", \"horsy\", \"gesso\", \"jaggy\", \"trove\", \"nixes\", \"creel\", \"pater\", \"iotas\", \"cadge\", \"skyed\", \"hokum\", \"furze\", \"ankhs\", \"curie\", \"nutsy\", \"hilum\", \"remix\", \"angst\", \"burls\", \"jimmy\", \"veiny\", \"tryst\", \"codon\", \"befog\", \"gamed\", \"flume\", \"axman\", \"doozy\", \"lubes\", \"rheas\", \"bozos\", \"butyl\", \"kelly\", \"mynah\", \"jocks\", \"donut\", \"avian\", \"wurst\", \"chock\", \"quash\", \"quals\", \"hayed\", \"bombe\", \"cushy\", \"spacy\", \"puked\", \"leery\", \"thews\", \"prink\", \"amens\", \"tesla\", \"intro\", \"fiver\", \"frump\", \"capos\", \"opine\", \"coder\", \"namer\", \"jowly\", \"pukes\", \"haled\", \"chard\", \"duffs\", \"bruin\", \"reuse\", \"whang\", \"toons\", \"frats\", \"silty\", \"telex\", \"cutup\", \"nisei\", \"neato\", \"decaf\", \"softy\", \"bimbo\", \"adlib\", \"loony\", \"shoed\", \"agues\", \"peeve\", \"noway\", \"gamey\", \"sarge\", \"reran\", \"epact\", \"potty\", \"coned\", \"upend\", \"narco\", \"ikats\", \"whorl\", \"jinks\", \"tizzy\", \"weepy\", \"posit\", \"marge\", \"vegan\", \"clops\", \"numbs\", \"reeks\", \"rubes\", \"rower\", \"biped\", \"tiffs\", \"hocus\", \"hammy\", \"bunco\", \"fixit\", \"tykes\", \"chaws\", \"yucky\", \"hokey\", \"resew\", \"maven\", \"adman\", \"scuzz\", \"slogs\", \"souse\", \"nacho\", \"mimed\", \"melds\", \"boffo\", \"debit\", \"pinup\", \"vagus\", \"gulag\", \"randy\", \"bosun\", \"educe\", \"faxes\", \"auras\", \"pesto\", \"antsy\", \"betas\", \"fizzy\", \"dorky\", \"snits\", \"moxie\", \"thane\", \"mylar\", \"nobby\", \"gamin\", \"gouty\", \"esses\", \"goyim\", \"paned\", \"druid\", \"jades\", \"rehab\", \"gofer\", \"tzars\", \"octet\", \"homed\", \"socko\", \"dorks\", \"eared\", \"anted\", \"elide\", \"fazes\", \"oxbow\", \"dowse\", \"situs\", \"macaw\", \"scone\", \"drily\", \"hyper\", \"salsa\", \"mooch\", \"gated\", \"unjam\", \"lipid\", \"mitre\", \"venal\", \"knish\", \"ritzy\", \"divas\", \"torus\", \"mange\", \"dimer\", \"recut\", \"meson\", \"wined\", \"fends\", \"phage\", \"fiats\", \"caulk\", \"cavil\", \"panty\", \"roans\", \"bilks\", \"hones\", \"botch\", \"estop\", \"sully\", \"sooth\", \"gelds\", \"ahold\", \"raper\", \"pager\", \"fixer\", \"infix\", \"hicks\", \"tuxes\", \"plebe\", \"twits\", \"abash\", \"twixt\", \"wacko\", \"primp\", \"nabla\", \"girts\", \"miffs\", \"emote\", \"xerox\", \"rebid\", \"shahs\", \"rutty\", \"grout\", \"grift\", \"deify\", \"biddy\", \"kopek\", \"semis\", \"bries\", \"acmes\", \"piton\", \"hussy\", \"torts\", \"disco\", \"whore\", \"boozy\", \"gibed\", \"vamps\", \"amour\", \"soppy\", \"gonzo\", \"durst\", \"wader\", \"tutus\", \"perms\", \"catty\", \"glitz\", \"brigs\", \"nerds\", \"barmy\", \"gizmo\", \"owlet\", \"sayer\", \"molls\", \"shard\", \"whops\", \"comps\", \"corer\", \"colas\", \"matte\", \"droid\", \"ploys\", \"vapid\", \"cairn\", \"deism\", \"mixup\", \"yikes\", \"prosy\", \"raker\", \"flubs\", \"whish\", \"reify\", \"craps\", \"shags\", \"clone\", \"hazed\", \"macho\", \"recto\", \"refix\", \"drams\", \"biker\", \"aquas\", \"porky\", \"doyen\", \"exude\", \"goofs\", \"divvy\", \"noels\", \"jived\", \"hulky\", \"cager\", \"harpy\", \"oldie\", \"vivas\", \"admix\", \"codas\", \"zilch\", \"deist\", \"orcas\", \"retro\", \"pilaf\", \"parse\", \"rants\", \"zingy\", \"toddy\", \"chiff\", \"micro\", \"veeps\", \"girly\", \"nexus\", \"demos\", \"bibbs\", \"antes\", \"lulus\", \"gnarl\", \"zippy\", \"ivied\", \"epees\", \"wimps\", \"tromp\", \"grail\", \"yoyos\", \"poufs\", \"hales\", \"roust\", \"cabal\", \"rawer\", \"pampa\", \"mosey\", \"kefir\", \"burgs\", \"unmet\", \"cuspy\", \"boobs\", \"boons\", \"hypes\", \"dynes\", \"nards\", \"lanai\", \"yogis\", \"sepal\", \"quark\", \"toked\", \"prate\", \"ayins\", \"hawed\", \"swigs\", \"vitas\", \"toker\", \"doper\", \"bossa\", \"linty\", \"foist\", \"mondo\", \"stash\", \"kayos\", \"twerp\", \"zesty\", \"capon\", \"wimpy\", \"rewed\", \"fungo\", \"tarot\", \"frosh\", \"kabob\", \"pinko\", \"redid\", \"mimeo\", \"heist\", \"tarps\", \"lamas\", \"sutra\", \"dinar\", \"whams\", \"busty\", \"spays\", \"mambo\", \"nabob\", \"preps\", \"odour\", \"cabby\", \"conks\", \"sluff\", \"dados\", \"houri\", \"swart\", \"balms\", \"gutsy\", \"faxed\", \"egads\", \"pushy\", \"retry\", \"agora\", \"drubs\", \"daffy\", \"chits\", \"mufti\", \"karma\", \"lotto\", \"toffs\", \"burps\", \"deuce\", \"zings\", \"kappa\", \"clads\", \"doggy\", \"duper\", \"scams\", \"ogler\", \"mimes\", \"throe\", \"zetas\", \"waled\", \"promo\", \"blats\", \"muffs\", \"oinks\", \"viand\", \"coset\", \"finks\", \"faddy\", \"minis\", \"snafu\", \"sauna\", \"usury\", \"muxes\", \"craws\", \"stats\", \"condo\", \"coxes\", \"loopy\", \"dorms\", \"ascot\", \"dippy\", \"execs\", \"dopey\", \"envoi\", \"umpty\", \"gismo\", \"fazed\", \"strop\", \"jives\", \"slims\", \"batik\", \"pings\", \"sonly\", \"leggo\", \"pekoe\", \"prawn\", \"luaus\", \"campy\", \"oodle\", \"prexy\", \"proms\", \"touts\", \"ogles\", \"tweet\", \"toady\", \"naiad\", \"hider\", \"nuked\", \"fatso\", \"sluts\", \"obits\", \"narcs\", \"tyros\", \"delis\", \"wooer\", \"hyped\", \"poset\", \"byway\", \"texas\", \"scrod\", \"avows\", \"futon\", \"torte\", \"tuple\", \"carom\", \"kebab\", \"tamps\", \"jilts\", \"duals\", \"artsy\", \"repro\", \"modem\", \"toped\", \"psych\", \"sicko\", \"klutz\", \"tarns\", \"coxed\", \"drays\", \"cloys\", \"anded\", \"piker\", \"aimer\", \"suras\", \"limos\", \"flack\", \"hapax\", \"dutch\", \"mucky\", \"shire\", \"klieg\", \"staph\", \"layup\", \"tokes\", \"axing\", \"toper\", \"duvet\", \"cowry\", \"profs\", \"blahs\", \"addle\", \"sudsy\", \"batty\", \"coifs\", \"suety\", \"gabby\", \"hafta\", \"pitas\", \"gouda\", \"deice\", \"taupe\", \"topes\", \"duchy\", \"nitro\", \"carny\", \"limey\", \"orals\", \"hirer\", \"taxer\", \"roils\", \"ruble\", \"elate\", \"dolor\", \"wryer\", \"snots\", \"quais\", \"coked\", \"gimel\", \"gorse\", \"minas\", \"goest\", \"agape\", \"manta\", \"jings\", \"iliac\", \"admen\", \"offen\", \"cills\", \"offal\", \"lotta\", \"bolas\", \"thwap\", \"alway\", \"boggy\", \"donna\", \"locos\", \"belay\", \"gluey\", \"bitsy\", \"mimsy\", \"hilar\", \"outta\", \"vroom\", \"fetal\", \"raths\", \"renal\", \"dyads\", \"crocs\", \"vires\", \"culpa\", \"kivas\", \"feist\", \"teats\", \"thats\", \"yawls\", \"whens\", \"abaca\", \"ohhhh\", \"aphis\", \"fusty\", \"eclat\", \"perdu\", \"mayst\", \"exeat\", \"molly\", \"supra\", \"wetly\", \"plasm\", \"buffa\", \"semen\", \"pukka\", \"tagua\", \"paras\", \"stoat\", \"secco\", \"carte\", \"haute\", \"molal\", \"shads\", \"forma\", \"ovoid\", \"pions\", \"modus\", \"bueno\", \"rheum\", \"scurf\", \"parer\", \"ephah\", \"doest\", \"sprue\", \"flams\", \"molto\", \"dieth\", \"choos\", \"miked\", \"bronx\", \"goopy\", \"bally\", \"plumy\", \"moony\", \"morts\", \"yourn\", \"bipod\", \"spume\", \"algal\", \"ambit\", \"mucho\", \"spued\", \"dozer\", \"harum\", \"groat\", \"skint\", \"laude\", \"thrum\", \"pappy\", \"oncet\", \"rimed\", \"gigue\", \"limed\", \"plein\", \"redly\", \"humpf\", \"lites\", \"seest\", \"grebe\", \"absit\", \"thanx\", \"pshaw\", \"yawps\", \"plats\", \"payed\", \"areal\", \"tilth\", \"youse\", \"gwine\", \"thees\", \"watsa\", \"lento\", \"spitz\", \"yawed\", \"gipsy\", \"sprat\", \"cornu\", \"amahs\", \"blowy\", \"wahoo\", \"lubra\", \"mecum\", \"whooo\", \"coqui\", \"sabra\", \"edema\", \"mrads\", \"dicot\", \"astro\", \"kited\", \"ouzel\", \"didos\", \"grata\", \"bonne\", \"axmen\", \"klunk\", \"summa\", \"laves\", \"purls\", \"yawny\", \"teary\", \"masse\", \"largo\", \"bazar\", \"pssst\", \"sylph\", \"lulab\", \"toque\", \"fugit\", \"plunk\", \"ortho\", \"lucre\", \"cooch\", \"whipt\", \"folky\", \"tyres\", \"wheee\", \"corky\", \"injun\", \"solon\", \"didot\", \"kerfs\", \"rayed\", \"wassa\", \"chile\", \"begat\", \"nippy\", \"litre\", \"magna\", \"rebox\", \"hydro\", \"milch\", \"brent\", \"gyves\", \"lazed\", \"feued\", \"mavis\", \"inapt\", \"baulk\", \"casus\", \"scrum\", \"wised\", \"fossa\", \"dower\", \"kyrie\", \"bhoys\", \"scuse\", \"feuar\", \"ohmic\", \"juste\", \"ukase\", \"beaux\", \"tusky\", \"orate\", \"musta\", \"lardy\", \"intra\", \"quiff\", \"epsom\", \"neath\", \"ocher\", \"tared\", \"homme\", \"mezzo\", \"corms\", \"psoas\", \"beaky\", \"terry\", \"infra\", \"spivs\", \"tuans\", \"belli\", \"bergs\", \"anima\", \"weirs\", \"mahua\", \"scops\", \"manse\", \"titre\", \"curia\", \"kebob\", \"cycad\", \"talky\", \"fucks\", \"tapis\", \"amide\", \"dolce\", \"sloes\", \"jakes\", \"russe\", \"blash\", \"tutti\", \"pruta\", \"panga\", \"blebs\", \"tench\", \"swarf\", \"herem\", \"missy\", \"merse\", \"pawky\", \"limen\", \"vivre\", \"chert\", \"unsee\", \"tiros\", \"brack\", \"foots\", \"welsh\", \"fosse\", \"knops\", \"ileum\", \"noire\", \"firma\", \"podgy\", \"laird\", \"thunk\", \"shute\", \"rowan\", \"shoji\", \"poesy\", \"uncap\", \"fames\", \"glees\", \"costa\", \"turps\", \"fores\", \"solum\", \"imago\", \"byres\", \"fondu\", \"coney\", \"polis\", \"dictu\", \"kraal\", \"sherd\", \"mumbo\", \"wroth\", \"chars\", \"unbox\", \"vacuo\", \"slued\", \"weest\", \"hades\", \"wiled\", \"syncs\", \"muser\", \"excon\", \"hoars\", \"sibyl\", \"passe\", \"joeys\", \"lotsa\", \"lepta\", \"shays\", \"bocks\", \"endue\", \"darer\", \"nones\", \"ileus\", \"plash\", \"busby\", \"wheal\", \"buffo\", \"yobbo\", \"biles\", \"poxes\", \"rooty\", \"licit\", \"terce\", \"bromo\", \"hayey\", \"dweeb\", \"imbed\", \"saran\", \"bruit\", \"punky\", \"softs\", \"biffs\", \"loppy\", \"agars\", \"aquae\", \"livre\", \"biome\", \"bunds\", \"shews\", \"diems\", \"ginny\", \"degum\", \"polos\", \"desex\", \"unman\", \"dungy\", \"vitam\", \"wedgy\", \"glebe\", \"apers\", \"ridgy\", \"roids\", \"wifey\", \"vapes\", \"whoas\", \"bunko\", \"yolky\", \"ulnas\", \"reeky\", \"bodge\", \"brant\", \"davit\", \"deque\", \"liker\", \"jenny\", \"tacts\", \"fulls\", \"treap\", \"ligne\", \"acked\", \"refry\", \"vower\", \"aargh\", \"churl\", \"momma\", \"gaols\", \"whump\", \"arras\", \"marls\", \"tiler\", \"grogs\", \"memes\", \"midis\", \"tided\", \"haler\", \"duces\", \"twiny\", \"poste\", \"unrig\", \"prise\", \"drabs\", \"quids\", \"facer\", \"spier\", \"baric\", \"geoid\", \"remap\", \"trier\", \"gunks\", \"steno\", \"stoma\", \"airer\", \"ovate\", \"torah\", \"apian\", \"smuts\", \"pocks\", \"yurts\", \"exurb\", \"defog\", \"nuder\", \"bosky\", \"nimbi\", \"mothy\", \"joyed\", \"labia\", \"pards\", \"jammy\", \"bigly\", \"faxer\", \"hoppy\", \"nurbs\", \"cotes\", \"dishy\", \"vised\", \"celeb\", \"pismo\", \"casas\", \"withs\", \"dodgy\", \"scudi\", \"mungs\", \"muons\", \"ureas\", \"ioctl\", \"unhip\", \"krone\", \"sager\", \"verst\", \"expat\", \"gronk\", \"uvula\", \"shawm\", \"bilgy\", \"braes\", \"cento\", \"webby\", \"lippy\", \"gamic\", \"lordy\", \"mazed\", \"tings\", \"shoat\", \"faery\", \"wirer\", \"diazo\", \"carer\", \"rater\", \"greps\", \"rente\", \"zloty\", \"viers\", \"unapt\", \"poops\", \"fecal\", \"kepis\", \"taxon\", \"eyers\", \"wonts\", \"spina\", \"stoae\", \"yenta\", \"pooey\", \"buret\", \"japan\", \"bedew\", \"hafts\", \"selfs\", \"oared\", \"herby\", \"pryer\", \"oakum\", \"dinks\", \"titty\", \"sepoy\", \"penes\", \"fusee\", \"winey\", \"gimps\", \"nihil\", \"rille\", \"giber\", \"ousel\", \"umiak\", \"cuppy\", \"hames\", \"shits\", \"azine\", \"glads\", \"tacet\", \"bumph\", \"coyer\", \"honky\", \"gamer\", \"gooky\", \"waspy\", \"sedgy\", \"bents\", \"varia\", \"djinn\", \"junco\", \"pubic\", \"wilco\", \"lazes\", \"idyls\", \"lupus\", \"rives\", \"snood\", \"schmo\", \"spazz\", \"finis\", \"noter\", \"pavan\", \"orbed\", \"bates\", \"pipet\", \"baddy\", \"goers\", \"shako\", \"stets\", \"sebum\", \"seeth\", \"lobar\", \"raver\", \"ajuga\", \"riced\", \"velds\", \"dribs\", \"ville\", \"dhows\", \"unsew\", \"halma\", \"krona\", \"limby\", \"jiffs\", \"treys\", \"bauds\", \"pffft\", \"mimer\", \"plebs\", \"caner\", \"jiber\", \"cuppa\", \"washy\", \"chuff\", \"unarm\", \"yukky\", \"styes\", \"waker\", \"flaks\", \"maces\", \"rimes\", \"gimpy\", \"guano\", \"liras\", \"kapok\", \"scuds\", \"bwana\", \"oring\", \"aider\", \"prier\", \"klugy\", \"monte\", \"golem\", \"velar\", \"firer\", \"pieta\", \"umbel\", \"campo\", \"unpeg\", \"fovea\", \"abeam\", \"boson\", \"asker\", \"goths\", \"vocab\", \"vined\", \"trows\", \"tikis\", \"loper\", \"indie\", \"boffs\", \"spang\", \"grapy\", \"tater\", \"ichor\", \"kilty\", \"lochs\", \"supes\", \"degas\", \"flics\", \"torsi\", \"beths\", \"weber\", \"resaw\", \"lawny\", \"coven\", \"mujik\", \"relet\", \"therm\", \"heigh\", \"shnor\", \"trued\", \"zayin\", \"liest\", \"barfs\", \"bassi\", \"qophs\", \"roily\", \"flabs\", \"punny\", \"okras\", \"hanks\", \"dipso\", \"nerfs\", \"fauns\", \"calla\", \"pseud\", \"lurer\", \"magus\", \"obeah\", \"atria\", \"twink\", \"palmy\", \"pocky\", \"pends\", \"recta\", \"plonk\", \"slaws\", \"keens\", \"nicad\", \"pones\", \"inker\", \"whews\", \"groks\", \"mosts\", \"trews\", \"ulnar\", \"gyppy\", \"cocas\", \"expos\", \"eruct\", \"oiler\", \"vacua\", \"dreck\", \"dater\", \"arums\", \"tubal\", \"voxel\", \"dixit\", \"beery\", \"assai\", \"lades\", \"actin\", \"ghoti\", \"buzzy\", \"meads\", \"grody\", \"ribby\", \"clews\", \"creme\", \"email\", \"pyxie\", \"kulak\", \"bocci\", \"rived\", \"duddy\", \"hoper\", \"lapin\", \"wonks\", \"petri\", \"phial\", \"fugal\", \"holon\", \"boomy\", \"duomo\", \"musos\", \"shier\", \"hayer\", \"porgy\", \"hived\", \"litho\", \"fisty\", \"stagy\", \"luvya\", \"maria\", \"smogs\", \"asana\", \"yogic\", \"slomo\", \"fawny\", \"amine\", \"wefts\", \"gonad\", \"twirp\", \"brava\", \"plyer\", \"fermi\", \"loges\", \"niter\", \"revet\", \"unate\", \"gyved\", \"totty\", \"zappy\", \"honer\", \"giros\", \"dicer\", \"calks\", \"luxes\", \"monad\", \"cruft\", \"quoin\", \"fumer\", \"amped\", \"shlep\", \"vinca\", \"yahoo\", \"vulva\", \"zooey\", \"dryad\", \"nixie\", \"moper\", \"iambs\", \"lunes\", \"nudie\", \"limns\", \"weals\", \"nohow\", \"miaow\", \"gouts\", \"mynas\", \"mazer\", \"kikes\", \"oxeye\", \"stoup\", \"jujus\", \"debar\", \"pubes\", \"taels\", \"defun\", \"rands\", \"blear\", \"paver\", \"goosy\", \"sprog\", \"oleos\", \"toffy\", \"pawer\", \"maced\", \"crits\", \"kluge\", \"tubed\", \"sahib\", \"ganef\", \"scats\", \"sputa\", \"vaned\", \"acned\", \"taxol\", \"plink\", \"oweth\", \"tribs\", \"resay\", \"boule\", \"thous\", \"haply\", \"glans\", \"maxis\", \"bezel\", \"antis\", \"porks\", \"quoit\", \"alkyd\", \"glary\", \"beamy\", \"hexad\", \"bonks\", \"tecum\", \"kerbs\", \"filar\", \"frier\", \"redux\", \"abuzz\", \"fader\", \"shoer\", \"couth\", \"trues\", \"guyed\", \"goony\", \"booky\", \"fuzes\", \"hurly\", \"genet\", \"hodad\", \"calix\", \"filer\", \"pawls\", \"iodic\", \"utero\", \"henge\", \"unsay\", \"liers\", \"piing\", \"weald\", \"sexed\", \"folic\", \"poxed\", \"cunts\", \"anile\", \"kiths\", \"becks\", \"tatty\", \"plena\", \"rebar\", \"abled\", \"toyer\", \"attar\", \"teaks\", \"aioli\", \"awing\", \"anent\", \"feces\", \"redip\", \"wists\", \"prats\", \"mesne\", \"muter\", \"smurf\", \"owest\", \"bahts\", \"lossy\", \"ftped\", \"hunky\", \"hoers\", \"slier\", \"sicks\", \"fatly\", \"delft\", \"hiver\", \"himbo\", \"pengo\", \"busks\", \"loxes\", \"zonks\", \"ilium\", \"aport\", \"ikons\", \"mulct\", \"reeve\", \"civvy\", \"canna\", \"barfy\", \"kaiak\", \"scudo\", \"knout\", \"gaper\", \"bhang\", \"pease\", \"uteri\", \"lases\", \"paten\", \"rasae\", \"axels\", \"stoas\", \"ombre\", \"styli\", \"gunky\", \"hazer\", \"kenaf\", \"ahoys\", \"ammos\", \"weeny\", \"urger\", \"kudzu\", \"paren\", \"bolos\", \"fetor\", \"nitty\", \"techy\", \"lieth\", \"somas\", \"darky\", \"villi\", \"gluon\", \"janes\", \"cants\", \"farts\", \"socle\", \"jinns\", \"ruing\", \"slily\", \"ricer\", \"hadda\", \"wowee\", \"rices\", \"nerts\", \"cauls\", \"swive\", \"lilty\", \"micks\", \"arity\", \"pasha\", \"finif\", \"oinky\", \"gutty\", \"tetra\", \"wises\", \"wolds\", \"balds\", \"picot\", \"whats\", \"shiki\", \"bungs\", \"snarf\", \"legos\", \"dungs\", \"stogy\", \"berms\", \"tangs\", \"vails\", \"roods\", \"morel\", \"sware\", \"elans\", \"latus\", \"gules\", \"razer\", \"doxie\", \"buena\", \"overs\", \"gutta\", \"zincs\", \"nates\", \"kirks\", \"tikes\", \"donee\", \"jerry\", \"mohel\", \"ceder\", \"doges\", \"unmap\", \"folia\", \"rawly\", \"snark\", \"topoi\", \"ceils\", \"immix\", \"yores\", \"diest\", \"bubba\", \"pomps\", \"forky\", \"turdy\", \"lawzy\", \"poohs\", \"worts\", \"gloms\", \"beano\", \"muley\", \"barky\", \"tunny\", \"auric\", \"funks\", \"gaffs\", \"cordy\", \"curdy\", \"lisle\", \"toric\", \"soyas\", \"reman\", \"mungy\", \"carpy\", \"apish\", \"oaten\", \"gappy\", \"aurae\", \"bract\", \"rooky\", \"axled\", \"burry\", \"sizer\", \"proem\", \"turfy\", \"impro\", \"mashy\", \"miens\", \"nonny\", \"olios\", \"grook\", \"sates\", \"agley\", \"corgi\", \"dashy\", \"doser\", \"dildo\", \"apsos\", \"xored\", \"laker\", \"playa\", \"selah\", \"malty\", \"dulse\", \"frigs\", \"demit\", \"whoso\", \"rials\", \"sawer\", \"spics\", \"bedim\", \"snugs\", \"fanin\", \"azoic\", \"icers\", \"suers\", \"wizen\", \"koine\", \"topos\", \"shirr\", \"rifer\", \"feral\", \"laded\", \"lased\", \"turds\", \"swede\", \"easts\", \"cozen\", \"unhit\", \"pally\", \"aitch\", \"sedum\", \"coper\", \"ruche\", \"geeks\", \"swags\", \"etext\", \"algin\", \"offed\", \"ninja\", \"holer\", \"doter\", \"toter\", \"besot\", \"dicut\", \"macer\", \"peens\", \"pewit\", \"redox\", \"poler\", \"yecch\", \"fluky\", \"doeth\", \"twats\", \"cruds\", \"bebug\", \"bider\", \"stele\", \"hexer\", \"wests\", \"gluer\", \"pilau\", \"abaft\", \"whelm\", \"lacer\", \"inode\", \"tabus\", \"gator\", \"cuing\", \"refly\", \"luted\", \"cukes\", \"bairn\", \"bight\", \"arses\", \"crump\", \"loggy\", \"blini\", \"spoor\", \"toyon\", \"harks\", \"wazoo\", \"fenny\", \"naves\", \"keyer\", \"tufas\", \"morph\", \"rajas\", \"typal\", \"spiff\", \"oxlip\", \"unban\", \"mussy\", \"finny\", \"rimer\", \"login\", \"molas\", \"cirri\", \"huzza\", \"agone\", \"unsex\", \"unwon\", \"peats\", \"toile\", \"zombi\", \"dewed\", \"nooky\", \"alkyl\", \"ixnay\", \"dovey\", \"holey\", \"cuber\", \"amyls\", \"podia\", \"chino\", \"apnea\", \"prims\", \"lycra\", \"johns\", \"primo\", \"fatwa\", \"egger\", \"hempy\", \"snook\", \"hying\", \"fuzed\", \"barms\", \"crink\", \"moots\", \"yerba\", \"rhumb\", \"unarc\", \"direr\", \"munge\", \"eland\", \"nares\", \"wrier\", \"noddy\", \"atilt\", \"jukes\", \"ender\", \"thens\", \"unfix\", \"doggo\", \"zooks\", \"diddy\", \"shmoo\", \"brusk\", \"prest\", \"curer\", \"pasts\", \"kelpy\", \"bocce\", \"kicky\", \"taros\", \"lings\", \"dicky\", \"nerdy\", \"abend\", \"stela\", \"biggy\", \"laved\", \"baldy\", \"pubis\", \"gooks\", \"wonky\", \"stied\", \"hypos\", \"assed\", \"spumy\", \"osier\", \"roble\", \"rumba\", \"biffy\", \"pupal\", \"admin\", \"anime\", \"aunty\", \"axion\", \"bicep\", \"bleep\", \"boney\", \"caput\", \"cyber\", \"detox\", \"droit\", \"ficus\", \"fritz\", \"geeky\", \"inbox\", \"junto\", \"latte\", \"manga\", \"midge\", \"minty\", \"ovine\", \"penne\", \"plier\", \"pouty\", \"ralph\", \"ramen\", \"savoy\", \"scree\", \"tonga\", \"trope\", \"utile\", \"wight\", \"willy\"]\n\nexport default text;","// © 2022 Alex Barga. All rights reserved.\n// Reproduction or transmission in whole or in part, in any form or by any means, electronic,\n// mechanical or otherwise, is prohibited without the prior  written consent of the owner.\nimport WordList from './WordList';\nconst CH = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\nclass WordleDriver\n{\n    private _answerC: number[] = [];\n    private _answerS: string = '';\n    private _playing: number = 0;\n    private _charInst: number[] = [...CH];\n    private _words: WordList = new WordList();\n\n    constructor()\n    {\n        this.build();\n    }\n\n    char(c: number): string{\n        return String.fromCharCode(c-32)\n    }\n\n    build ()\n    {\n        this._answerS = this._words.pick();\n        for (let i = 0; i < 5; i++) {\n            let n = this._answerS.charCodeAt(i);\n            this._answerC.push(n);\n            this._charInst[n - 97]++;\n        }\n    }\n\n    makeGuess (word: string): string\n    {\n        this._playing++;\n        let cht = [...this._charInst]\n        let loss = false;\n        if (this._playing == 9)\n        {\n            if (word != this._answerS)\n            {\n                loss = true;\n            }\n        }\n\n        if (this._words.is_guessable(word)) \n        {\n            let str: string = \"\";\n            let ch: number;\n            for (let i = 0; i < 5; i++) \n            {\n                ch = word.charCodeAt(i);\n                if (this._answerC[i] == ch) \n                {\n                    str = str + \"e\" + this.char(ch);\n                    cht[ch - 97]--;\n                }\n                else if (cht[ch - 97] > 0) \n                {\n                    if (cht[ch - 97] == 1 && word.charCodeAt(this._answerS.indexOf(this.char(ch+32))) == ch)\n                    {\n                        str = str + \"w\" + this.char(ch);\n                    }\n                    else \n                    {\n                        str = str + \"c\" + this.char(ch);\n                        cht[ch - 97]--;\n                    }\n                }\n                else\n                {\n                    str = str + \"w\" + this.char(ch);\n                }\n\n            }\n            if (word == this._answerS)\n            {\n                str = str + \"123456\";\n            }\n            else if (loss)\n            {\n                str = str + this._answerS;\n            }\n            return str.toString();\n        }\n        else \n        {\n            this._playing--;\n            return \"Invalid\";\n        }\n    }\n\n    reset ()\n    {\n        this._answerS = this._words.pick();\n        this._answerC = [];\n        this._playing = 0;\n        this._charInst = [...CH];\n        for (let i = 0; i < 5; i++) {\n            let n = this._answerS.charCodeAt(i);\n            this._answerC.push(n);\n            this._charInst[n - 97]++;\n        }\n    }\n}\nexport default WordleDriver;","// © 2022 Alex Barga. All rights reserved.\n// Reproduction or transmission in whole or in part, in any form or by any means, electronic,\n// mechanical or otherwise, is prohibited without the prior  written consent of the owner.\nimport WordleDriver from \"./WordleDriver\";\n\nclass GameDriver{\n\n    private wordleDrivers: WordleDriver[] = [new WordleDriver(), new WordleDriver(), new WordleDriver(), new WordleDriver()];\n\n    guess (word: string): string[] {\n        let w = word.toLowerCase();\n        let responses: string[] = [\"\",\"\",\"\",\"\"];\n        for (let i = 0; i < 4; i++) {\n            responses[i] = this.wordleDrivers[i].makeGuess(w);\n        }\n        return responses;\n    }\n\n    reset() {\n        for (let i = 0; i < 4; i++) {\n            this.wordleDrivers[i].reset();\n        }\n        return \"\";\n    }\n    \n}\nexport default GameDriver","// © 2022 Alex Barga. All rights reserved.\n// Reproduction or transmission in whole or in part, in any form or by any means, electronic,\n// mechanical or otherwise, is prohibited without the prior  written consent of the owner.\nimport \"./css/App.css\";\n\nimport React, {Component} from \"react\";\nimport RowBox from \"./row-box\";\nimport Keyboard from \"./keyboard\";\nimport GameDriver from \"./GameDriver\";\n\ninterface Quordle {\n    tColor: string;\n    title: string;\n    rows: any;\n    wordList: any;\n}\n\nconst q: string = \"w w w w w \";\nlet num: [number, number, number, number] = [0, 0, 0, 0];\nlet help = true;\nlet darkMode = true;\nlet rows: any = [[], [], [], []];\nlet wordList: any = [\"\", \"\", \"\", \"\"];\n\nclass App extends Component<{}, Quordle> {\n    private gameDriver: GameDriver = new GameDriver();\n\n    constructor(props: Quordle) {\n        super(props);\n        for (let i = 0; i < 4; i++)\n            for (let j = 0; j < 9; j++)\n                rows[i].push(q);\n        this.state = ({tColor: \"tB\", title: \"Wordle\", rows: rows, wordList: wordList});\n    }\n\n    makeGuess(guessVal: string) {\n        let text = this.gameDriver.guess(guessVal);\n        for (let i = 0; i < 4; i++) {\n            if (num[i] < 9) {\n                if (text[i] === \"Invalid\") {\n                    this.setState({tColor: \"rTB\"});\n                    this.timeout(1500);\n                    this.setState({tColor: \"tB\"})\n                } else if (text[i].length === 15) {\n                    rows[i][num[i]] = text[i].substring(0, 10);\n                    num[i]++;\n                } else {\n                    this.analyzeGuess(text[i], i);\n                    rows[i][num[i]] = text[i];\n                    if (text[i].length > 12) {\n                        num[i] = 8;\n                    }\n                    num[i]++;\n                    if (text[i].length > 12) {\n                        wordList[i] = \"Nice Job! :)\";\n                    }\n                }\n            }\n            this.forceUpdate();\n        }\n    };\n\n    analyzeGuess = async (val: string, num: number) => {\n        // try {\n        //     let response = await fetch(\"http://localhost:4567/analyze?num=\" + num + \"&guess=\" + val);\n        //     if (!response.ok) {\n        //         alert(\"The status is wrong! Expected: 200, Was: \" + response.status);\n        //         return; // Don't keep trying to execute if the response is bad.\n        //     }\n        //     let text = await response.json();\n        //     wordList[num] = text.substring(1, text.length - 1);\n        // } catch (e) {\n        //     alert(\"There was an error contacting the server.\");\n        //     console.log(e);\n        //     this.forceUpdate();\n        // }\n    };\n\n    reset = async () => {\n        for (let i = 0; i < 4; i++)\n            for (let j = 0; j < 9; j++)\n                rows[i][j] = q;\n        num = [0, 0, 0, 0];\n        wordList = [\"\", \"\", \"\", \"\"];\n        this.setState({\n            tColor: \"tB\", title: \"Wordle\"\n        });\n        (document.getElementById('wordBox') as HTMLInputElement).value = '';\n\n        this.gameDriver.reset();\n        this.forceUpdate();\n    };\n\n    swapHelper() {\n        let all = document.querySelectorAll(\"#ans-box\");\n        for (let i = 0; i < all.length; i++)\n            (all.item(i) as HTMLButtonElement).style.textIndent = (help ? \"0px\" : \"-9999px\");\n        help = !help;\n    };\n\n    swapMode() {\n        document.body.style.backgroundColor = (darkMode ? \"#262626\" : \"thistle\");\n        let all = document.querySelectorAll(\"input,p,div.container,div.key-box,button\");\n        for (let i = 0; i < all.length; i++) {\n            if (darkMode)\n                all.item(i).classList.add(\"dm\");\n            else\n                all.item(i).classList.remove(\"dm\");\n        }\n        darkMode = !darkMode;\n    }\n\n    timeout(delay: number) {\n        return new Promise(res => setTimeout(res, delay));\n    };\n\n    render() {\n        return (\n            <div className={\"big-box\"}>\n                <link rel=\"icon\" type=\"image/x-icon\" href=\"css/favicon.ico\"></link>\n                <div className={\"container tc\"} id={\"short\"}>\n                    <button onClick={this.reset}>RESET</button>\n                    <button onClick={this.swapMode}>SWAP</button>\n                    <button onClick={this.swapHelper}>HELP</button>\n                </div>\n                <div className={\"container\"}>\n                    <p className={\"title-box\"} id={this.state.tColor}>{this.state.title}</p>\n                </div>\n                <RowBox rowSt={this.state.rows} wordBox={wordList}/>\n                <div className={\"container wc\"}>\n                    <input disabled={true} className={\"word\"} id={\"wordBox\"} type=\"text\" maxLength={5}/>\n                </div>\n                <div className={\"container\"} id={\"keyCont\"}>\n                    <Keyboard getGuess={(g1: string) => this.makeGuess(g1)}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// © 2022 Alex Barga. All rights reserved.\n// Reproduction or transmission in whole or in part, in any form or by any means, electronic,\n// mechanical or otherwise, is prohibited without the prior  written consent of the owner.\nimport * as React from 'react';\nimport * as ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}